プレイスメントグループは、単一のアベイラビリティーゾーン内のインスタンスを論理的にグループ化したものです。


クラシックロードバランサは、複数のAmazon EC2インスタンスにおける基本的な負荷分散を行うのに最適なロードバランサです。L4レイヤーで負荷分散するため、HTTPやHTTPS以外のTCPプロトコル上で動作するプロトコルにも対応することができます。ただし、 クラシックロードバランサは現在は使用を推奨されていません。
アプリケーションロードバランサは、HTTP / HTTPS トラフィックの負荷分散に最適なロードバランサです。Webサイトのロードバランサとして使用する場合はこのロードバランサが推奨されます。L7レイヤーで負荷分散します。高度なルーティング機能、マイクロサービス、およびコンテナベースのアーキテクチャが必要なアプリケーションに最適です。


エンドポイントには、HTTP/HTTPS、AWS Lambda、Eメール、SQS、SMS、モバイルプッシュ通知を利用することができます。
XMLは利用することができません。


Amazon EC2リソースにつける事の出来るタグには、以下のような基本制限があります。
・キーは最大128 文字まで。
・値は最大256 文字まで。
また、大文字と小文字は区別されます。1リソースあたりにつけることが出来るタグの最大数は 50個までです。



CloudFrontのオリジンサーバは、以下の３種類に分類することができます。
オリジンサーバとは、コンテンツを配信する元となっているサーバのことです。
①S3オリジン（バケット）
②S3オリジン（静的ホスティング）
③カスタムオリジン（カスタムオリジンとは一般的なWebサーバでありパブリックとプライベートの両方を扱うことができます。）



Auto ScalingでスケールアウトしたEC2インスタンスをスケールインする場合、デフォルトでは以下の順番で実行されます。
・インスタンス数（最も多いAZから優先）
・上記同条件の場合、起動設定が古いインスタンスがあるAZを優先
・起動設定が古いインスタンスが複数ある場合は、次の課金発生までの時間が最も短いインスタンスを優先
・次の課金発生までの時間が同じインスタンスが複数ある場合はランダム


VM Import/Export を使用すると簡単に、仮想マシンイメージを既存の環境から Amazon EC2 インスタンスにインポートしたり、オンプレミス環境にエクスポートしたりすることできます。この機能によって、元々持っていた仮想マシンを AWSに持ち込み、Amazon EC2 のインスタンスとしてすぐに使用できる状態とすることができます。これにより、IT セキュリティ・構成管理・コンプライアンス等、効率的に要件に合わせて仮想マシンを作成できます。
AWS Storage Gateway は、オンプレミスから実質無制限のクラウドストレージへのアクセスを提供するハイブリッドクラウドストレージサービスです。Storage Gateway を使用して、ストレージ管理を簡素化し主要なハイブリットクラウドストレージの仕組みを素早く構成することができるためコストを削減できます。
Snowball はセキュリティに考慮して設計されたデバイスを使用するペタバイト規模のデータ転送ソリューションで、AWS クラウド内外に大容量データを転送できます。




CloudFront では、GeoIP データベースを使い、地理的ディストリビューションの制限 機能を使うことができます、この機能を利用することで、ある国(地域)からのアクセスに対して 403 (アクセス拒否) のレスポンスを返すことが可能です。



AWS CLIを利用するために必要なものです。
・対象サービスの操作権限が付与されたIAMロール
・もしくはアクセスキーとシークレットアクセスキー
セキュリティの観点からアクセスキーでの認証より、IAMロールでの認証の方が適切と言えます。



「Kinesis Data Firehoseを利用してS3にログを蓄積し、Athenaを利用してログ解析を行う組み合わせ」が正解となります。 
Amazon Kinesis Data Firehose は、アクセスログなどのストリーミングデータを各種データストアにロードできます。蓄積場所としてはAmazon S3、Amazon Redshift、Amazon Elasticsearch Service、Splunk などがあり、設問の要件では大量ログをコスト効率よく蓄積するためS3を選択することが最適です。
Amazon Athena ではAmazon S3 内のデータを標準 SQL を使用して簡単に分析できます。



Aレコード：ドメイン名からIPアドレスを解決するのはAレコード
CNAMEレコード：ドメイン名から別のドメイン名を参照するレコード
MXレコード：対象ドメイン宛のメール配送先ホスト名を定義するレコード
NSレコード：DNSで定義されるそのドメインについての情報の種類の一つで、ドメインのゾーン情報を管理するDNSサーバを定義するレコード



Amazon S3 は、データセンターのディスクに書き込まれるときにデータをオブジェクトレベルで暗号化し、ユーザがデータにアクセスするときに復号します。リクエストが認証され、ユーザがアクセス許可を持っていれば、オブジェクトが暗号化されているかどうかに関係なく同じ方法でアクセスできます。たとえば、署名付き URL を使用してオブジェクトを表示する場合、オブジェクトが暗号化されているかどうかは関係ありません。また、バケット内のオブジェクトを一覧表示する場合においても、オブジェクトが暗号化されているかどうかに関係なく、すべてのオブジェクトを表示することができます。

Amazon S3 で保管時のデータを保護するには、以下のようなオプションがあります。
・サーバー側の暗号化を使用する
オブジェクトをデータセンター内のディスクに保存する前に暗号化し, オブジェクトをダウンロードするときに復号するように Amazon S3 にリクエストします。
・クライアント側の暗号化を使用する
クライアント側でデータを暗号化し、暗号化したデータを Amazon S3 にアップロードします。この場合、暗号化プロセス、暗号化キーはユーザ側で管理します。


API Gatewayはクライアントからリクエストを受け取ってそれをバックエンドに渡すし、バックエンドからレスポンスを受け取ってクライアントに返すし、プロキシのような働きを行います。
ウェブページはバックエンドサービスのドメインとは別のドメインにあるため、API Gateway で CORS を有効にします。これは、クロスオリジンコールであり、セキュリティのためにブラウザによって制限されています。ドメイン間リクエストを許可するには、API Gateway で CORS を有効にする必要があります。
API のリソースが API 自身のドメイン以外のドメインからリクエストを受信する場合、リソース上の選択されたメソッドのクロスオリジンリソース共有(CORS)を有効にする必要があります。



Amazon EBS 暗号化 は、EBS ボリュームのために、独自のキー管理インフラストラクチャの構築、管理、および保護を必要としない、簡単な暗号化ソリューションを提供します。暗号化された EBS ボリュームを作成し、サポートされるインスタンスタイプにアタッチする場合、以下のタイプのデータが暗号化されます。
・ボリューム内の保存データ
・ボリュームとインスタンスの間で移動されるすべてのデータ
・ボリュームから作成されたすべてのスナップショット
・それらのスナップショットから作成されたすべてのボリューム
暗号化オペレーションは EC2 インスタンスをホストするサーバー上で実行され、インスタンスとそれに接続された EBS ストレージ間でのデータの保存と転送中のデータの両方のセキュリティを保証します。



AWS CloudTrail は、AWS アカウントのガバナンス、コンプライアンス、運用監査、リスク監査を行うためのサービスです。クロスアカウントアクセスは AWSのIT ガバナンス(企業のIT資産の監視・規律を守る仕組み）を提供し、一括請求を使用して部門アカウントを親企業のマスターアカウントにリンクすることで、コストの監視が可能です。


サービスコントロールポリシー (SCP) は、AWSの子アカウントのアクセス権を制御することができます。
AWSのマスターアカウント管理者は、サービスコントロールポリシー (SCP) を使用して、組織内のメンバーアカウントのアクセス権限を設定できます。SCP を使用すると、各メンバーアカウントのユーザーとロールがどの AWS サービスリソースおよび個々の API アクションにアクセスできるかを制限することができます。AWS Organizations がメンバーアカウントのサービス、リソース、または API アクションへのアクセスをブロックすると、そのアカウントのユーザーまたはロ ールはアクセスできません。このブロックは、メンバーアカウントの管理者が IAM ポリシーで明示的にそのようなアクセス許可をした場合でも有効です。



AWS Data Pipeline は、データの移動と変換を自動化するサービスです。AWS Data Pipeline はデータ駆動型のワークフローを定義して、タスクの正常な完了をトリガーにして、次のタスクを実行できます。AWS Data Pipeline はDynamoDBに設定することが可能であり、定期的なデータ取得タスクを設定させることができます。

DynamoDBストリームを有効化することで、DynamoDBテーブルへのデータ登録や更新などのイベントをトリガーとして、Lambda関数などを実行して処理することができます。これにより、DynamoDBのデータを取得することも可能ですが、定期的にデータ取得するような処理ではなく、イベント起動になってしまうため、要件に合致していません。


EC２インスタンスがIAMデータベース認証を利用してDB インスタンスにアクセスが可能です。この認証方法では、DB インスタンスに接続するときにパスワードではなく、認証トークンを使用します。認証トークンはAmazon RDS がリクエストに応じて生成する一意の文字列であり、AWS 署名バージョン 4 を使用して生成されます。各トークンには 15 分の有効期間があります。認証トークンは IAM を使用して外部的に管理されるため、ユーザー認証情報をデータベースに保存する必要はありません。

このシナリオでは、EC2インスタンスにホストされたデータベースサーバーの書き込みパフォーマンスを向上させることが求められています。 これを実現するには、インスタンスボリュームに標準のRAID 0構成を設定するか、EC2インスタンスのサイズを大きくします。

RAID 0とは、複数のストレージ（外部記憶装置）をまとめて一台の装置のように管理するRAID技術の方式（RAIDレベル）の一つで、複数の装置に均等にデータを振り分け、並行して同時に記録することで読み書きを高速化することができます。したがって、オプション２が正解となります。


SAML（Security Assertion Markup Language）はインターネット上で、IDやパスワードなどの認証情報を連携するためのXMLベースの仕様です。SAMLは主にエンタープライズアプリケーション間の認証で使われています。SAMLはMicrosoft Active Directoryを使用しているため、AWSクラウドへのAPIアクセス用にSAMLベースのフェデレーションを設定できます。

AWS Single Sign-Onなどのサービスを利用することで、SAMLによる認証の仕組みを実現することが可能です。AWS SSO は SAML IdP 機能を AWS Managed Microsoft AD または AWS SSO ディレクトリに追加します。それにより、ユーザーは、AWS マネジメントコンソール やサードパーティー製アプリケーションなど、SAML をサポートするサービスへの SSO が可能になります。



AWS Elastic Beanstalk はECSなどのDocker サービスと連携して、容量のプロビジョニング、負荷の分散、スケーリング、およびアプリケーションの状態の監視の詳細を自動化することができます。したがって、オプション３が正解となります。

ECSはDocker形式でのアプリケーション開発環境を構築することができるオーケストレーションサービスです。これを利用してAWSリソースの展開は可能ですが、リソースのプロビジョニング、負荷分散、オートスケーリング、監視、クラスター全体でのコンテナ配置などのタスクの自動化にはElastic Beanstalkとの連携が必要です。


シンプルルーティングはドメインで特定の機能を実行する単一のリソースがある場合に使用します。シンプルルーティングではトラフィックを複数インスタンスなどに分散してルーティングして、ランダムに制御されます。


RDSのインスタンスタイプにおいてIOPS性能が高いタイプを選択して高性能な処理が行えるように設定することで、ランダムＩ／Ｏ遅延を防ぐことができます。また、必要に応じてリードレプリカを増強させるのも良いでしょう。

ElastiCacheは高速データ処理に向いていますが、NoSQL型のデータベースの代表的なAWSサービスです。こちらもリレーショナルデータベースとして利用することはできません。


Amazon Athenaを利用することでAmazon S3 から直接データに対してクエリ処理が可能となります。その際には実行するクエリに対してのみ料金が発生し、各クエリでスキャンされるデータ量に基づいて課金されます。データの圧縮、分割、列形式への変換を行うと、大幅なコスト削減とパフォーマンス向上を実現でき、データ処理コストを抑えることができます。

RDSは一般的なリレーショナルデータベースとしてデータを中長期処理するために利用されます。データ処理を行って、短期間でデータを削除するといったライフサイクル管理には向いていません。


サーバーサイド暗号化を使用すると、Amazon S3 はオブジェクトをデータセンター内のディスクに保存する前に暗号化し、オブジェクトをダウンロードするときにS3側で自動で復号します。

S3 バケットに対して暗号化キーによるサーバーサイド暗号化 を有効化すると、各アクセスログファイルは、S3 バケットに保存される前に自動的に暗号化され、アクセス時に復号されます。したがって、ログも自動で暗号化されるため、S3バケットの暗号化と別に設定する必要はありません。


SSE-S3はAmazon S3 で管理された暗号化キーにより実施されるサーバーサイド暗号化です。ユーザーがキーに対するアクセス管理はできませんが、署名バージョン4によりアクセス制限が設定され、所有者であるAWSアカウントID以外からのアクセスを拒否します。SSE-S3は暗号化と復号化をS3が自動で実施してくれるため最も管理に手間がかからない暗号化方式であり、要件に合致します。


DynamoDBはそのままではリードレプリカを増やすことができません。後述するDAX を有効化することで、DAXクラスターは、1 つのみのプライマリノードと、0～9 個のリードレプリカノードを構成することができます。


Amazon Kinesis Data Firehose はストリーミングデータをデータレイクやデータストア、分析ツールに配信するサービスです。ストリーミングデータをキャプチャして変換しつつ、Amazon S3、Amazon Redshift、Amazon Elasticsearch Serviceにロードします。DynamoDBに配信することはできません



Amazon ECS はELBのいずれかのタイプのロードバランサ―を使用できます。Application Load Balancer は、HTTP/HTTPS (またはレイヤー 7) トラフィックをルーティングするために使用されます。Network Load Balancer と Classic Load Balancer は、TCP またはレイヤー 4 トラフィックをルーティングするために使用されます。


バケットに対するオブジェクト作成・更新・削除などのデータ処理のイベントをトリガーとしてレプリ ケーションが実行されます。クロスリージョンレプリケーション は、異なる AWS リージョンにある２つのバケット間でオブジェクトを自動的に非同期にコピーする機能です。クロスリージョンレプリケーションは同じ AWS アカウントが所有するバケットにも、異なるアカウントが所有するバケットにも設定できます。


AWS CloudHSMを利用した鍵管理により、EUなどの各国の厳しいセキュリティ基準を満たすことができます。AWS CloudHSMは安全なキーストレージや高パフォーマンスの暗号化オペレーションを AWS アプリケーションに対して簡単に追加できるようにするクラウドベースのハードウェアセキュリティモジュール (HSM) です。AWS CloudHSM では不正使用防止策が施された HSM へのシングルテナントアクセスを利用できます。HSM は暗号化モジュール向けの FIPS 140-2 レベル 3 標準に準拠しています。


Amazon Inspector は自動化されたセキュリティ評価サービスで、AWS にデプロイしたアプリケーションのセキュリティとコンプライアンスを向上させることができます。今回の用途には利用できません。


アクセス頻度は低いですが、管理担当者からの依頼に応じて即時にデータを参照できる必要があります。
S3 One Zone-IA は、アクセスが頻繁ではないデータをコストを押させて保存するのに最適なストレージクラスです。また、データ取り出しは通常の標準クラスと同じように即時に実行可能です。複数AZにデータを保存する標準クラスやStandard-IAとは異なり、S3 One Zone-IA は単一AZにデータを保存することによってコストを節約します。 したがって、データ冗長性は劣るため、バックアップのコピーや再作成可能なデータサマリーなど、アクセスが頻繁ではないデータを低価格に保存するのに向いています。Standard-IAとOne Zone-IAとを選ぶ基準は、保存されるデータの重要度です。ログファイルなどのマスターではないデータは、One Zone-IAを利用することがユースケースとして最適であるため、本件の要件に合致します。


/24の設定により、256個のIPアドレスを利用できます（実際はAWS側で予約されているIPアドレスも含まれます。）。これは200個のIPアドレスを利用する最適なIPアドレス数です。



オプション１は不正解です。/21の設定により、2048個ののIPアドレスを利用できるため、利用できる数が多すぎます。

オプション２は不正解です。/22の設定により、1024個ののIPアドレスを利用できるため、利用できる数が多すぎます。

オプション３は不正解です。/23の設定により、512個ののIPアドレスを利用できるため、利用できる数が多すぎます。


VPCのDNS hostnamesオプションが有効化されていないと、サブネットで起動されたインスタンスはDNS名を取得できません。

VPC 内で起動したインスタンスがパブリック IP アドレスに対応するパブリック DNS ホスト名を受け取るかどうか、および Amazon DNS サーバーを通じた DNS 解決が VPCに適用されるかは、VPCの操作で決定されます。VPCのDNS hostnamesオプションを有効化するためには、 enableDnsSupport 属性を「 true」 に設定した上で、enableDnsHostnames属性を「true」に設定して、VPC 内のインスタンスがDNS ホスト名を取得可能とします。


SQSを利用して可視性タイムアウトを設定することで、特定のインスタンスにおいて一定期間キューが処理されない場合に限り、可視性タイムアウトを超過するとスポットインスタンス側でキューが見えるようになり処理が実行されるようになります。この設定により、特定のEC2インスタンスでの処理が優先されるものの、可視性タイムアウトを超過した場合にのみ、別のインスタンスによって処理されるような設定することが可能です。これにより、特定のキューに対して特定のインスタンスでの処理を優先させて、複数のインスタンスでキューが処理されるのを防ぐことができます。


このシナリオでは、Glacierにデータ保存後、ボールトへのアクセス制御をポリシーとして設定して、そのポリシーが編集できないようにすることが要件となっています。Glacier のVault Lockでは、ボールトロックポリシーを使用して、Glacier の各ボールトに対するコンプライアンス管理を簡単に適用することができます。そして、ボールトロックを適用することで、そのポリシーが編集できないように設定することが可能です。


3enインスタンスはAmazon EC2 において GB あたりの料金が最も安価なストレージ最適化インスタンスです。このインスタンスタイプは数万 IOPS もの低レイテンシーなランダム I/O オペレーションには向いていません。



バンドID、アルバムID、ソングID、作曲者IDなどのデータをキーバリューストアとドキュメントモデル形式で保存することができるのはDynamoDBです。DynamoDB は、テーブル内の属性に対してさまざまなデータ型がサポートされています。

DynamoDBが保存できるデータ型は次のように分類できます。



■スカラー型

スカラー型は 1 つの値を表すことができます。スカラー型は、数値、文字列、バイナリ、ブール、および null です。

■ドキュメント型

ドキュメント型は JSON ドキュメントなどの入れ子の属性を持つ複雑な構造を表すことができます。

■セット型

セット型は複数のスカラー値を表すことができます。セット型は、文字セット、数値セット、およびバイナリセットです。


ストレージアクセスを分析し、適切なデータを適切なストレージクラスに移行する時期を判断することが必要です。

Amazon S3 分析のストレージクラス分析により、ストレージアクセスパターンを分析し、適切なデータを適切なストレージクラスに移行すべきタイミングを判断できます。ストレージクラス分析がフィルタリングされたデータセットのアクセスパターンを一定期間監視することで、ライフサイクルポリシーを設定することができます。


キャッシュされるべきデータがエッジロケーションにないため、オリジンサーバーへのアクセスが頻発しています。

この問題はCache-Controlのmax-ageディレクティブが低い値に設定されていることが主な原因です。キャッシュ保持期間が非常に短いためリクエストは頻繁にオリジンサーバーに送信されます。通常、CloudFrontは、指定したキャッシュ期間が経過するまで、エッジロケーションからオブジェクトを処理します。

キャッシュの有効期限が切れると、エッジロケーションがオブジェクトのユーザーリクエストを取得した際に、CloudFrontはリクエストをオリジンサーバーに転送して、キャッシュに最新バージョンのオブジェクトが含まれていることを確認します。max-ageディレクティブが低いとキャッシュへの確認が短いサイクルとなり、オリジンサーバーへの確認回数が増加します。


レガシーアプリケーションはマルチキャストネットワーキングに依存しており、AWSで確実に起動させるための特別な設定が必要です。

このレガシーアプリケーションはマルチキャストネットワーキングに依存しており、AWSで確実に起動させるためには、仮想オーバレイネットワークをインスタンスのOSレベルで起動させることが求められます。したがって、レガシーアプリケーションを移行するためにオーバーレイマルチキャストを使用することが必要となります。 オーバーレイ・マルチキャストとは，クライアント・パソコンにインストールしたアプリケーション・ソフトでマルチキャスト（1対多通信）を実現する技術です。

マルチキャストは、1対多のデータ配信を可能にするネットワーク機能です。1つ以上の送信元が、通常マルチキャストグループ内に存在する加入者にネットワークパケットを送信できます。 ただし、VPCはマルチキャストまたはブロードキャストネットワーキングをサポートしていないことに注意してください。


Lambda関数は実行数に応じて支払いが発生するため、 Lambda関数が無期限に実行されないようにタイムアウト設定がなされています。 指定されたタイムアウトに達するとLambda関数は実行を終了します。そのため、予想される実行時間に基づいてタイムアウト時間を設定することが必要となります。 デフォルトのタイムアウトは3秒で、AWS Lambdaのリクエストあたりの最大実行時間は900秒です。これは15分に相当します。よって、15分を超過した処理が発生すると計算処理が途中で終了してしまいます。

このシナリオでは、データ処理は約10分～15分間実行されており、計算結果に間違いが発生しているということが問題となっています。約10分～15分間実行される処理が15分で絶対に完了するという保証はないため、15分を超過した処理は計算処理の途中で終了している可能性があります。



複数のアベイラビリティーゾーンに設置された複数のEC2インスタンスに着信要求を均等に分散するELBの設定が必要です。

ロードバランサーのノードは、クライアントからのリクエストを登録済みターゲットに分散させます。ELBのクロスゾーン負荷分散を有効とすると、ロードバランサーノードは有効なすべてのアベイラビリティーゾーンの登録済みターゲットにトラフィックを分散します。したがって、複数のアベイラビリティーゾーンにわたって全EC2インスタンスに着信要求を均等に分散することが可能となります。


AWSのVPCとオンプレミス環境とをネットワーク接続するための方法は、次のようなサービスを利用します。



・Direct Connect

・IPsec VPN接続

・AWS VPN CloudHub

・サードパーティソフトウェアのVPNアプライアンス



日本のユーザーは東京リージョンのサーバーに接続し、韓国のユーザーはソウルのサーバーに接続する必要があります。

Route53の位置情報ルーティングを使用すると、ユーザーの位置情報、つまりDNSクエリの発信位置に基づいてトラフィックを処理するリソースを選択できます。 たとえば、ヨーロッパからのすべてのクエリをノルウェー地域のELBロードバランサーにルーティングして、アジア地域のクエリは東京リージョンのELBロードバランサ―にルーティングを設定することができます。

Route 53 コンソールで地理的近接性ルーティングによりユーザーとリソース間の物理的な距離に基づいてトラフィックをルーティングできます。地理的近接性ルーティングはAWSリソース位置とユーザーの距離の2点に応じたトラフィック制御により、リージョン範囲を区分けすることが可能です。地理的近接性に基づくため国を指定するといった対応ではありません。したがって、ヨーロッパからのすべてのクエリをフランクフルトの ELB ロードバランサーにルーティングするといった処理には位置情報ルーティングを使用する方が最適です。



マルチAZ構成のAmazon　RDSでは、プライマリデータベースのインスタンスがダウンした場合に管理者の介入なしにデータベース操作をできるだけ早く再開できるように、フェールオーバーが自動的に処理されます。 フェイルオーバーすると、Amazon RDSはDBインスタンスのCNAMEレコードをスタンバイから切り替えて、新しいプライマリに昇格します。


Amazon S3にバックアップまたは保存される全データは暗号化する必要があります

法に相互に排他的な3つのオプションがあります。



・Amazon S3管理キーでサーバーサイド暗号化を使用する（SSE-S3）

・AWS KMS管理キーを使用したサーバーサイド暗号化を使用する（SSE-KMS）

・顧客提供のキーを使用してサーバーサイド暗号化を使用する（SSE-C）



SSE-S3はAES-256暗号化を使用した暗号化方式です。SSE-Cはユーザーがユーザー自身の暗号化キーを使用することを可能にします。よって、AES-256を利用するという選択が正しいです。



EC２インスタンスとデータベース間の設定にIPアドレスが利用されている場合において、Auto Scalingのターミネーションポリシーが古いEC2インスタンスから削除される設定の場合に、既存インスタンスが削除されてしまIPアドレスが変更されてしまいます。IPアドレスが切り替わってしまうため、IPアドレス指定した連携が機能しなくなってしまいます。IPアドレスが異なるため残ったっインスタンスはデータベースに接続できません。

EC２インスタンスとデータベース間の設定にIPアドレスが利用されている場合において、EC2インスタンスにElastic IPが設定されていないと、インスタンスの起動時にIPアドレスが変更されてしまうため、データベースに接続できなくなってしまいます。

AutoScaling が起動したEC2インスタンスにデータベースと関連づいたEIPが付与される設定をしていないと、これらのインスタンスがデータベースにアクセスができなくなってしまいます




オプション２が正解となります。このシナリオでは、サーバー用のOSはLinux を利用しアプリケーションを構成し、運用ダッシュボードとLinux OSのバッチ配布の自動化が必要です。AWS Elastic Beanstalk は自動的にデプロイタスク (バッチ配布の自動化、容量のプロビジョニング、負荷分散、Auto Scaling、アプリケーションのヘルスモニタリングなど) を処理します。AWS Elastic BeanstalkによりアプリケーションがホストされるAWS リソースをユーザー側で完全に制御することができます。また、Elastic Beanstalkコンソールを運用ダッシュボードとして、環境の状態とアプリケーションの状態を一目で分かるように表示することができます。



オプション１は不正解です。CloudFormationはAWSのインフラストラクチャリソースをJSONとYAMLで記述してプロビジョニングするための共通言語を提供するサービスです。これは運用管理ダッシュボードなどは提供していません。



VPCフローログを有効化することで、EC2インスタンスとネットワークインターフェイスとの間で行き来する IP トラフィック情報をキャプチャできます。このデータをCloudWacthなどで集約することで、ログの中央管理が達成できます。

オプション４が正解となります。AWS には複数アカウントや複数リージョンにわたって、ログを収集、分析、表示するための、中央ロギングソリューションが用意されています。この仕組みを構築するためには、EC2インスタンスのログファイルおよび VPC フローログをキャプチャしていく必要があります。CloudWatchエージェントを使用して Amazon EC2 インスタンスとオンプレミスサーバーからメトリクスとログを収集することができます。これにより、ログの中央管理が達成できます。


AWS CloudTrail はAWS アカウントのガバナンス、コンプライアンス、運用監査、リスク監査を行うためのサービスです。AWS CloudTrailが取得ログはユーザーのログであり、要件に合致していません。



EC2インスタンスがヘルスチェックに失敗した場合、ロードバランサーは異常なインスタンスに新しいリクエストを送信せずに、既存のリクエストの完了を許可する必要があります。

Connection Drainingは既存の接続を開いたまま、登録解除または異常なインスタンスへのCLBのリクエスト送信を停止することができます。これにより、ロードバランサーは、登録解除または異常なインスタンスに対して行われた実行中のリクエストを完了するトラフィック処理を実施します。

ロードバランサーのConnection Drainingを有効にすると、インスタンスの登録解除を報告する前に、ロードバランサーが接続を維持する最大時間を指定できます。 最大タイムアウト値は1〜3,600秒に設定できます（デフォルトは300秒です）。 最大時間制限に達すると、ロードバランサーは登録解除インスタンスへの接続を強制的に閉じます。

Amazon EC2 instance store-backed AMIを使用してEC2インスタンスを作成すると、そのインスタンスのデータはインスタンスストアに保存されます。インスタンスストアボリューム上のデータはインスタンスの存続期間中のみ持続するため、インスタンスが終了するとデータは自動的に削除されます。
Route53のフェールオーバー設定のアクティブ／アクティブ構成によって、レイテンシールーティングなどのルーティングポリシーを利用してフェールオーバーを構成することができます。その場合は、アクティブ／アクティブ構成となり、設定された全リソースを平等に利用することができます。リソースが利用できなくなると、そのリソースを Route 53 が異常として検出し、以後、クエリへの応答に含めることを控えます。



その際に、あなたはEBSボリュームの保存データは保持したいと考えています。
インスタンスを終了すると、EC2 は接続されていた各 EBS ボリュームの DeleteOnTermination 属性 を使用して、ボリュームを存続させるべきか、削除すべきかを判断します。デフォルトでは、インスタンスのルートボリュームの DeleteOnTermination 属性が有効化されており、EC２インスタンスの削除とともにEBSも削除されてしますが、その他のボリュームタイプではDeleteOnTermination 属性は非有効化されています。インスタンスが停止してもルートボリュームを維持したい場合は、ルートボリュームの DeleteOnTermination 属性を非有効化することが必要です。それによって、インスタンス削除後にデータを存続させることが可能です。



他社と物理サーバーを共有してはいけないことになっています。更に同じAWSルートアカウントに属しているとしても、部署が違うIAMアカウント同士では物理サーバーを共有することができないようにする必要があります。

Dedicated Hostは物理的にサーバーを占有するインスタンスタイプです。Dedicated Hosts では、ユーザーはライセンス条項の範囲で、ソケット単位、コア単位、または VM ソフトウェア単位の既存のライセンスを利用できます。IAMユーザーやIAMグループが同じAWSアカウントに属していたとしても、権限が異なる別のIAMユーザーやIAMグループとは物理サーバーを共有しません。



DynamoDBはリアルタイムのデータ集計処理に使用できる、耐久性、拡張性、および可用性の高いデータストアです。AppSyncを使用して、DynamoDBのデータをリアルタイムで最新の状態に保つコラボレーションアプリを簡単に構築できます。  これにより、アプリケーションはAmazon DynamoDBのデータにアクセスしたり、EC２インスタンスやAWS Lambda関数がデータ処理を実行するなどの機能を実装することができます。したがって、DynamoDBとAppSyncとを連携して、リアルタイム処理機能を実装することが可能です。
リアルタイム行動分析やランキング処理にはAppSyncを利用することが最適です。



本環境DR環境（ディザスタリカバリ）と遠隔DR環境を別リージョンに設置して、その管理をRoute53で実施することで、他の選択肢よりもAWSのマネージドサービスを利用した自動フェイルオーバーが利用可能であり、DR対応を自動化することができます。したがって、オプション２が正解となります。

Route53を利用したDR環境の方式としては主に以下の２つが考えられます。

■コールドスタンバイ

Amazon S3をバックアップデータの格納先として利用します。

事前にシステムイメージをクラウド上に準備します。

災害発生時にクラウド上のシステムを起動し、Route53で切り替えることで復旧します。

投資コストを抑えられ、手軽に始めることがで



■ウォームスタンバイ

クラウドのスタンバイ環境にデータを常時レプリケーションします。

通常は、スタンバイ環境を最少構成で稼働させ、災害発生時は必要なキャパシティに変更します。

スタンバイ環境の運用が常時必要になりますが、Route53でシステム切り替えを素早く実行することができます



自動でトラフィックが別インスタンスに切り替えられましたが、その処理は停止してしまいました。IPアドレスが変更されてしまうことが原因のようです。

EC２インスタンスにELBやRoute53を構成していると、特定のEC2インスタンスに障害が発生した際に、ダウンタイムを最小にして待機系インスタンスに切り替えます。その際にホスト名を待機系のIPアドレスに向け直すと、DNS情報が伝播するまでに一定のダウンタイムが発生する可能性があります。

これを防止するためには、フローティングIPを利用してElastic IPアドレスをフローティングすることで即時に別のEC2インスタンスへとトラフィックを切り替えることができます。障害発生時には稼動系からElastic IPアドレスを外し、待機系インスタンスに割り当て直すことで瞬時にトラフィックの向け先を変更できます。



Auto Scalingを設定して高負荷処理への対応を出来るようにしました。しかしながら、ELBのヘルスチェックが異常を示しているにも関わらず、Auto ScalingによるEC2インスタンスの起動が実行されていません。

Auto Scalingは起動したインスタンスに対して、定期的なヘルスチェックを実行します。このへルスチェックにはEC2タイプとELBタイプの2つのタイプがあります。

EC2タイプでは、EC2のステータスがrunning以外の場合、またはシステムステータスがimpairedの場合に、このインスタンスを異常と判断します。

ELBタイプでは、インスタンスのステータスチェックとELBのヘルスチェックからインスタンスの状態を判断します。

したがって、Auto ScalingがEC2タイプのヘルスチェックを利用していると、ELBのヘルスチェックが異常を示しているにも関わらず、EC2インスタンス側のステータスの問題がなければAuto Scalingが実行されません。



現在、あなたはデータ取得機能を実装しています。Lambda関数を利用したデータ取得処理機能を実装して、HTMLからアクセスして利用する予定です。

このシナリオでは、Lambda関数を利用したデータ取得処理機能を実装して、Amazon API GatewayとLambda関数を統合することで、Lambda関数をHTMLからアクセスして利用することが求められています。

API Gateway は完全マネージド型サービスでAPI の作成、配布、保守、監視、保護が可能なサービスです。AWS Lambda で実行されるコードからデータ、ビジネスロジック、機能にアクセスするための「玄関」として機能する REST API および WebSocket API を作成できます。HTMLに直接書き込んでコードを呼び出すことも可能です。



コンテナを実行する仮想マシンのクラスターをプロビジョニングやスケールなどの設定が不要な方式をとりたいと考えています。

以前は、Amazon EKSとFargateの組合せは利用できませんでしたが、2019年12月より、AWS Fargate の上でKubernetesを利用できるようになりました。Amazon EKS と Fargateはインスタンスのプロビジョニング設定などを自動で構成してくれるため、AWS 上での Kubernetes ベースのアプリケーション開発やその管理を一定程度自動化してくれます。したがって、ECSとFargateの組合せよりも Kubernetesを利用することで、より自動化を達成することが可能です。

Fargate はコンテナを実行するために仮想マシンのクラスターをプロビジョニング、設定、スケールする必要がありません。これにより、サーバータイプの選択、クラスターをスケールするタイミングの決定、クラスターのパッキングの最適化を行う必要がなくなります。



Step Functions サーバーレスのオーケストレーションサービスであり、 AWSリソースと組み合わせたワークフローを作成するサービスです。人間による操作を必要とするような長時間実行される、半自動化されたワークフローを作成することもできます。したがって、このワークフローに手動アクションを必要とするいくつかのタスクが存在する可能性があるためであり、手動アクションが処理されなければタスクは停滞することになります。



Route 53 ネームサーバーにALBを指定するために、Aliasターゲットの IP アドレスを伴う A レコード (IPv4 アドレスの場合) または AAAA レコード (IPv6 アドレスの場合) を設定します。したがって、オプション１と２が正解となります。



RDSはMyISAMはMySQLのストレージエンジンとして使用することはできません。 MySQLにおいて、推奨されるストレージエンジンはInnoDBです。ストレージエンジンとは、さまざまなテーブル型に対する SQL 操作を処理する MySQL コンポーネントです



Amazon EC2 でインスタンスを設定時にユーザーデータを設定することで、インスタンス起動時にスクリプトを実行できます。AWSではシェルスクリプトと cloud-init ディレクティブという2 つのタイプのユーザーデータを Amazon EC2 に渡すことができます。また、このデータはプレーンテキスト、ファイルまたは base64 でエンコードされたテキスト (API コールの場合) として、起動ウィザードに渡すこともできます。



SNSはマイクロサービスなどの分離を可能にする、高可用性で、耐久性に優れたセキュアな完全マネージド型 pub/sub メッセージングサービスです。プッシュ型の連携処理や通知機能の実装に利用します。

SNSはアプリケーションやコンポーネント間でのメッセージの送信と受信を繰り返す仕組みとして利用できます。SNSは pub-sub に対応しており、SNSトピックにメッセージを送信(publish)すると、トピックを購読(subscribe)しているsubscriberにメッセージが一斉配信されます。

SQSはポーリング処理を実施する際に利用されるものであり、並列処理などの分散処理時に利用するべきもので、イベントに連動したメッセージ通知にはSNSを利用することなります。




ユーザーの一時的なアクセスにはAWS STSを利用して権限を付与する仕組みを利用します。

ウェブ ID フェデレーションを使用することで、カスタムのサインインコードを作成したり、独自のユーザー ID を管理したりする必要がなくなります。その代わりに、アプリのユーザーはGoogleなどの外部 ID プロバイダーを使用してサインインすることができます。認証トークンを受け取ったら、そのトークンを AWS アカウントのリソースを使用するためのアクセス許可を持つ IAM ロールにマッピングし、AWS の一時的セキュリティ認証情報に変換することができます。IdP を使用すると、アプリケーションで長期的なセキュリティ認証情報を埋め込んで配布する必要がないため、AWS アカウントの安全性の維持に役立ちます。



DynamoDBへのデータ登録後、自動でLambda関数を起動してメタデータを登録することが望ましい構成です。そのためには、DynamoDBストリームという仕組みを使うことで、DynamoDBテーブルへのデータ登録をトリガーにしてLambda関数を起動することができます。また、Lambda関数は最大512MBまでのデータ容量を扱うことができます。したがって、オプション１が正解となります。



VPCにCIDRブロックを追加する際には以下の規則が適用されます。



- 許容ブロックサイズは、「/ 28」サブネットマスクから「/ 16」のサブネットマスクまでです。

-  CIDRブロックは、VPCに関連付けられている既存のCIDRブロックと重複してはいけません。



したがって、/ 28から/ 16までの範囲内にある168.0.0.0/27のみが正解となります。




AWS SAMは、サーバーレスアプリケーション構築用のデプロイツールです。YAMLを使用して、サーバレスアプリケーションのLambda関数、API、データベース、イベントソースマッピングをモデリングします。AWS SAMはCloudFormationと連携してサーバレスアプリケーションを展開します。その際は、SAM が SAM 構文を AWS CloudFormation 構文に変換および拡張することで、サーバーレスアプリケーションの構築を高速化することができます。


AWS Database Migration Service を使用すると、オンプレミスにあるデータベースを短期間で安全に AWS に移行できます。今回の要件には利用できません。

オプション２は間違いです。AWS Server Migration Service は、オンプレミスの VMware vSphere、Microsoft Hyper-V/SCVMM、または Azure 仮想マシンの AWSに移行するツールです。今回の要件には利用できません。

オプション４は間違いです。Amazon SWF はステップまたは連続したステップがあるバックグラウンドジョブを構築、実行、スケールすることができるクラウド内の完全マネージド型の状態トラッカーおよびワークフローシステムです。今回の要件には利用できません。



EBSのスナップショットはEBSの利用状況に関係なく、非同期に作成することができます。したがって、オプション１の「EBSボリュームを通常通りに利用することができる。」が正しい答えになります。

ポイントインタイムスナップショットはすぐに作成されますが、スナップショットのステータスはスナップショットが完了するまで保留中になり、最初のスナップショット作成には実行完了まで数時間かかることがあります。進行中のスナップショットはボリュームへの進行中の読み書きによって影響されません。それ故に、スナップショットの取得最中であっても、EBSボリュームを使用することができます。



EC2インスタンスから Amazon EBS ボリュームをデタッチするには、明示的にデタッチする必要があります。ルートボリュームの場合は、デフォルト設定ではインスタンスの削除されると同時にボリュームが削除されてしまいます。

また、インスタンスが実行中の場合、先にインスタンスからボリュームをアンマウントする必要があります。 EBS ボリュームがインスタンスのルートデバイスである場合、ボリュームをデタッチする前に、インスタンスを停止することが求められます。したがって、古いEC2インスタンスを停止した上で、ボリュームをデタッチします。



AWS IoT Core は、インターネットに接続されたデバイスから、クラウドアプリケーションやその他のデバイスに簡単かつ安全に通信するためのマネージド型クラウドサービスです。AWS IoT Coreを利用してセンサーデバイスを利用した車両管理アプリケーションを容易に構築することが可能となります。

AWS IoT Core は数十億個のデバイスと数兆件のメッセージをサポートしており、それらのメッセージを AWS エンドポイントや他のデバイスに確実かつセキュアに処理してルーティングします。AWS IoT Core を使用すれば、アプリケーションがインターネットに接続されていない場合でも、すべてのデバイスを常に追跡して通信できます。



AutoScaling のDesired capacityのインスタンス数を増加させることで、一時的なリクエスト流入増加に備えて、現在のインスタンス数を手動で増やすことができます。Desired capacityを設定することで、既存の Auto Scaling グループのサイズはいつでも手動で変更して、稼働するインスタンス数を増減させることができます。




AWSの責任共有モデルでは、AWSは次のようなセキュリティ管理するように責任があります。



- 設備

- ハードウェアの物理的セキュリティ

- ネットワークインフラ

- 仮想化インフラストラクチャ



ユーザー側は次のようなセキュリティ管理に責任が求められます。



-Amazon Machine Images（AMI）

- オペレーティングシステム

- アプリケーション

- 輸送中のデータ

- 保管時のデータ

- データストア

- 資格情報

- ポリシーと設定




このサーバーではメモリ内の大きいビッグデータデータセットをリアルタイムで処理するワークロードに対して高速なパフォーマンスを実現することが必要です。

このシナリオでは、メモリ最適化インスタンスの適切なタイプを選択することが求められています。メモリ最適化インスタンスは、メモリ内の大きいデータセットを処理するワークロードに対して高速なパフォーマンスを実現するように設計されています。

オプション３が正解となります。R5 インスタンスはメモリバウンドのワークロードに最適なインスタンスタイプです。優れたネットワークスループットおよびパケット率パフォーマンスを活用できるアプリケーションにおいて理想的なインスタンスです。

このインスタンスは、高パフォーマンスデータベース、ウェブ規模の分散型インメモリキャッシュ、中規模インメモリデータベース、リアルタイムビッグデータ分析、その他のエンタープライズアプリケーションなどに利用します。したがって、ビッグデータデータセットをリアルタイムで処理するワークロードに最適なインスタンスです。


A1 インスタンスは汎用インスタンスの１つです。スケールアウト型の Arm ベースのワークロードに最適なインスタンスタイプであり、大幅なコスト削減を実現できます。ビッグデータ処理向けのインスタンスではありません。

オプション２は不正解です。T3 インスタンスは汎用インスタンスの１つです。ベースラインレベルの CPU パフォーマンスを提供する次世代のバースト可能な汎用インスタンスタイプで、いつでも必要な時間だけ CPU 使用率をバーストさせる機能を備えています。これもビッグデータ処理向けのインスタンスではありません。

オプション４は不正解です。M5 インスタンスは汎用インスタンスの１つです。このファミリーは、バランスの取れたコンピューティング、メモリ、およびネットワークのリソースを提供し、多くのアプリケーションに適しています。これもビッグデータ処理向けのインスタンスではありません。




サインインページの URL に AWS アカウント IDではなく任意の名称を設定する場合は、アカウントのエイリアスを作成します。IAMユーザーアカウントのサインインページにエイリアスを設定すると、サインインページURLのアカウント ID と置き換わります。管理者はAWS マネジメントコンソール、AWS CLI、または AWS API を使用して、アカウントエイリアスを作成および管理できます。サインインページのデフォルトの URL は以下の形式となっています。



https://Your_AWS_Account_ID.signin.aws.amazon.com/console/ 



AWS アカウント ID に AWS アカウントエイリアスを作成すると、サインインページの URL は次のようになります。



https://Your_Alias.signin.aws.amazon.com/console/ 




Snowball はセキュリティを考慮して設計されたデバイスを使用して、ペタバイト規模のデータ転送を可能にします。このデバイスを利用してAWS クラウド内外に大容量データを転送できます。Snowball を使用すると、高いネットワークコスト、長時間かかる転送、セキュリティ面の懸念といった、大規模なデータ転送に関する一般的な課題を解決できます。データを簡単、迅速、安全に転送でき、高速インターネットによるデータ転送と比較して、コストは5 分の 1 ほどで済みます。

Snowball Edge Compute Optimized は、機械学習、フルモーション動画分析、分析、ローカルコンピューティングスタックなどのユースケースに強力なコンピューティングリソースを提供します。このデバイスは、S3 互換オブジェクトストレージまたは EBS 互換ブロックボリューム用に 42 TB の使用可能な HDD 容量を提供します。

Snowball Edge Storage Optimized デバイスは、大規模なデータ移行と定期的な転送ワークフロー、およびさらに高容量を必要とするローカルコンピューティングに適しています。Snowball Edge Storage Optimized は、ブロックボリュームと Amazon S3 互換オブジェクトストレージに 100TB の HDD 容量を提供します。しかしながら、利用可能なボリュームは80TBほどです。



したがって、100TBのデータを移行するためには、Snowball Edge Storage Optimized が少なくとも2台必要であり、他の選択肢では容量が不足しています。オプション３が正解となります。



CloudFront はユーザーに近い位置にあるエッジロケーションにキャッシュを保持することで、高速のコンテンツ配信を実施します。通常、ビューワーに最も高速に配信できるCloudFront エッジサーバーがエッジ処理を実施します。

CloudFrontはユーザーが初めてアクセスする画像については、オリジンサーバーからデータを取得して、エッジロケーションにあるCloudFrontサーバーにキャッシュを保持します。

ユーザーから再度その画像にアクセスがあった場合は、キャッシュサーバーにあるキャッシュデータを活用してユーザーに近いエッジサーバーからコンテンツを配信します。したがって、「エッジロケーション側にキャッシュとして保存されている画像にアクセスする。」が正解となります。



自社のシステムがAWSクラウドで基盤となるリソースを適切に管理できるようになります。
Amazon EC2はアンマネージド型のサービスであり、多くの管理がユーザーに委ねられています。したがって、Amazon EC2インスタンスを使用すると、ユーザーは作成したインスタンスのオペレーティングシステムにアクセスできます。

オプション２が正解となります。Amazon EMRはマネージド型のHadoopフレームワークを提供します。 しかしながら、Amazon EMRはEC2インスタンスを利用して構成されるため、Amazon EMRを構成するEC2インスタンスのオペレーティングシステムなどに、ユーザーはアクセス可能となります。


CloudFormationは１つのスタックの出力値を別のスタックに提供することで、スタック間を連動させてインフラを構成することが可能になります。スタック間で情報を共有するにはスタックの出力値をエクスポートします。スタックの出力値をエクスポートするには、スタックのテンプレートの Output セクションの Export フィールドを使用します。したがって、オプション１が正解となります。


オプション２は不正解です。CloudFormation スタックに既存のリソースをインポートすることが可能です。これはエクスポートされた出力値を別スタック側が利用する際に使われます。




Amazon SES の E メール送信機能を組み込むことで、一般ユーザーに対するアプリケーションからのメール通知機能を実装することができます。Amazon SES は、クラウドベースのメール送信サービスでマーケティング、通知、トランザクションに関する E メールを送信できるように設計されています。


Amazon S3 によってバケットポリシーが評価され適用された後、バケットの暗号化が適用されます。バケット暗号化設定を有効にしていても、暗号化情報なしの PUT リクエストを拒否するバケットポリシーがある場合、該当PUT リクエストは拒否されてしまうため、S3への暗号化したデータ登録に失敗してしまいます。


AWS Certificate ManagerでSSL証明書を作って、ELBに設定することで、証明書の費用が実質無料で安全なサイトが用意できます。これにより、クライアントとELB間のデータ保護が実施されます。

オプション２が正解となります。ALBを利用してリスナー設定にHTTPS(443)の設定を追加して、SSL証明書をダウンロードすることで、SSL証明書を設定することが出来ます。



EC2インスタンスがAMIインスタンスの起動シーケンスを開始すると、コスト請求が開始されます。インスタンスを終了させればコスト請求が終了します。よって、実行中のEC2インスタンスにはコストを要します。

オプション３が正解となります。停止したインスタンスには1時間ごとの使用料やデータ転送料金は請求されませんが、アタッチされているAmazon EBSボリュームのストレージに対して請求が発生します



VPCエンドポイント（ゲートウェイ型）を利用することで、インターネットアクセスを通さずにAWSネットワークからのアクセスでDynamoDBと接続することができます。

VPC エンドポイントはPrivateLink を使用する AWS サービスや VPC エンドポイントサービスにVPC をプライベートに接続する機能です。その際にインターネットゲートウェイ、NAT 、VPN や AWS Direct Connect を介した接続やパブリック IP アドレスは必要ありません。VPC と他のサービス間のトラフィックは、Amazon ネットワーク内で完結するためインターネットを経由することはありません。VPC エンドポイントには 2 種類あります。プライベートリンク型（インターフェイスエンドポイント）とゲートウェイ型です。



■VPCエンドポイント（ゲートウェイ型）は、ルートテーブルの指定されたターゲットとなるゲートウェイです。サポートされる AWS のサービスを宛先とするトラフィックをVPC内外で接続する際に使用します。以下の AWS のサービスがサポートされています。

・Amazon S3
・DynamoDB



■VPCエンドポイント（プライベートリンク型）は対象サービスを宛先とするトラフィックのエントリポイントとなるプライベート IP アドレスを持つ Elastic Network Interface です。以下のサービスがサポートされています。



・Amazon API Gateway

・Amazon CloudWatch

・Amazon CloudWatch Events

・Amazon CloudWatch Logs

・AWS CodeBuild

・Amazon EC2 API

・Elastic Load Balancing API

・AWS Key Management Service

・Amazon Kinesis Data Streams

・Amazon SageMaker ランタイム

・AWS Secrets Manager

・AWS Service Catalog

・Amazon SNS

・AWS Systems Manager

・他の AWS アカウントによってホストされるエンドポイントサービス

・サポートされる AWS Marketplace パートナーサービス



Amazon DynamoDB からデータを読み込むとき、ユーザーはその読み込みに対して結果的に整合性のある読み込みを設定するか、強い整合性を設定するかを指定できます。結果整合性モデルを選択すると、読み込みスループットが最大限に向上します。ただし、結果整合性読み込みでは最新の書き込み結果が反映されない可能性があります。したがって、今回の場合も更新したデータが反映される前に読込をしてしまい陳腐化したデータが閲覧されたものと考えられます。解決策としては、結果整合性モデルを強い整合性モデルに変更することになります。

DynamoDB には結果整合性のある読み込みに加えて、強い整合性のある読み込みをリクエストする柔軟性と制御が用意されています。強い整合性のある読み込みの結果には、読み込みの前に適切な応答を受け取ったすべての書き込みが反映されています。



DynamoDBのDAXを有効化することでインメモリDBを利用した高速処理を実施することができるようになります。これは古いデータを読み取る可能性を抑止することはできません。



満たすべき要件は、データが欠落しないこと、耐久性があること、およびデータを到着順にストリーミングすることです。Kinesisがこうした要件に基づいたデータ転送を可能にします。 Kinesis Data Streamsは一連のデータレコードを持つシャードのセットであり、各データレコードにはKinesis Data Streamsによって割り当てられたシーケンス番号があるため、 メッセージが失われず、重複されず、到着と同じ順序で伝送することが可能です。



オプション１は不正解です。SQSのデフォルトキューは単なる標準キューであり、FIFO（先入れ先出し）キューではないため順番が保証されません。 さらに、SQSは重複送信されないことを保証しません。



今回の問題は発注管理システムが重複した注文処理をしてしまうことです。これは人的ミスで注文を二回してしまうことが原因です。つまり、SQS側は二回のメッセージを別個のメッセージとして処理しており、SQS上ではメッセージに重複は発生してません。したがって、この問題の発生を防ぐには、SQSではなくStep functionサービスを使用する必要があります。Step Functionにより発注フローを作成して、二重の発注が発生しないようにプロセスを形成します。Step functionは、開発者が並行または順次のステップを持つバックグラウンドジョブを構築、実行、およびスケーリングするのに役立ちます



複数値回答ルーティングにより、Amazon Route 53 が DNS クエリに対する応答として複数の値 (ウェブサーバーの IP アドレスなど) を返すように設定できます。複数値回答ルーティングは各リソースが正常かどうかも確認するため、Route 53 は正常なリソースに値のみを返すことができます。したがって、EC２インスタンス単位での正常・非正常を判断してルーティングすることができます。これはロードバランサーに置き換わるものではありませんが、Route53が設定したインスタンスのトラフィックが正常であることをヘルスチェックした上で複数の IP アドレスを返すことができ、DNS を使用してアベイラビリティーとロードバランシングを向上させることができます。



このシナリオでは、AWSとオンプレミスの両方の環境にあるリソースから構成されるアプリケーションのために、分散アーキテクチャを構築することが求められており、両方の環境に適用可能なAWSサービスを選択することが必要となります。

分散アーキテクチャーはコンポーネントまたはレイヤーを相互に接続しながら独立して実行できるようにするコンピューティングアーキテクチャーの一種です。AWSサービスの中でSQSおよびAWS Step Functionsは、AWSで分散アーキテクチャを作成するために使用できるサービスです。 したがって、オプション１と２が正解となります。

Amazon SQSはアプリケーション間またはマイクロサービス間でのメッセージ通信を実現する信頼性が高く、スケーラビリティの高いホスト型キューを提供します。 Amazon SQSを使用すると、分散アプリケーションコンポーネント間でデータを移動したり、これらのコンポーネントを分離したりできます。

AWS Step Functionsは分散アプリケーションコンポーネント間での作業の調整を容易にするWebサービスです。



Amazon S3 バケットから配信するコンテンツへのアクセスを制限するには、CloudFrontの 署名付き URL または署名付き Cookie を作成してオブジェクトURLの閲覧権限を特定ユーザーに限定します。また、オリジンアクセスアイデンティティ (OAI) という特別な CloudFront ユーザーを作成してS3バケットへの直接的なアクセスを制限します。これにより、ユーザーは S3 バケットへの直接 URL を使用してファイルにアクセスすることはできなくなり、CloudFront を通じて提供するファイルへの安全なアクセスを維持することが可能となります。 したがって、オプション４が正解となります。



静的ウェブサイトをホストするにはAmazon S3バケットを設定し、ウェブサイトのコンテンツをバケットにアップロードします。こうすることてS3バケット内のHTMLファイルをベースにWEBサイトを公開することが可能です。

このWebサイトはバケットのAWSリージョン固有のWebサイトエンドポイントで利用できます。その際に、Pintorバスケットを利用すると以下のようなURLとなります。



pintor.s3-website-ap-northeast-1.amazonaws.com




ユーザーがAmazon API からのAPIリクエストを通じてサービスを呼び出した場合に、AWS X-Rayを使用してユーザーリクエストを追跡および分析できます。 API Gatewayは、すべてのAPI Gatewayエンドポイントタイプ（地域、エッジ最適化、プライベート）のAWS X-Rayトレースをサポートしています。そのため、 X-Rayが利用可能なすべてのリージョンにおいて、Amazon API GatewayにAWS X-Rayを使用してトレースデータを収集することが可能です



CloudWatchログにはアプリケーションのログ情報は取得されないため、これは不正解となります。アプリケーションのログ情報はX-rayをエージェントとして組み込んで有効化することで可能となります。X-Ray SDK for Java を使用して、収集した X-Ray セグメントからサンプリングされていない Amazon CloudWatch メトリクスを発行できます。

オプション４は不正解です。CloudTrailはユーザーとAPIのアクティビティログを取得する際に利用する機能です。AWS X-Ray は AWS CloudTrail と統合して、ユーザー、ロール、または AWS のサービスによって X-Ray で行われた API アクションを記録します。しかしながら、今回の要件にあるアプリケーションに設定するログ取得ではありません。



EBSは用途に応じてボリュームサイズやボリュームタイプを変更することができることが利点の一つです。

オプション２が正解となります。単一のEC2インスタンスのEBSボリュームは、インスタンス用のシステムドライブやデータベースアプリケーション用のストレージなどの頻繁に更新が必要なデータのプライマリストレージとして使用できます。また、継続的なディスクスキャンを実行するスループット重視のアプリケーションにも使用できます。 これらのEBSボリュームはEC2インスタンスの稼働期間とは無関係に維持されます。



オプション３は不正解です。アベイラビリティーゾーンでEBSボリュームを作成すると、そのゾーン内でのみ自動的に複製が生成されますが、別のAWSリージョンには複製されません。

オプション４は不正解です。EBSボリュームは同じアベイラビリティーゾーン内のEC2インスタンスにしかアタッチできないため、正しくありません。



RDSユーザーやEC２インスタンスへのアクセスを実施するEC２インスタンスなどはIAM ユーザーまたはIAMロールの認証情報と認証トークンを使用して、RDS DB インスタンスまたはクラスターに接続することができます。これはRDSインスタンスの作成時に「Enable IAM DB Authentication(IAMのDB認証を有効化することで利用できます。したがって、オプション１が正解となります。



オプション２は不正解です。暗号化を実施することとアクセス許可は無関係です。

オプション３は不正解です。セキュリティグループのトラフィック許可もアクセス可否において必要となりますが、これは認証情報を利用したアクセスとは異なるため、今回の要件には合致しません。

オプション４は不正解です。ネットワークACLがDBインスタンスがあるサブネットへのアクセスを許可している必要はありますが、これは認証情報を利用したアクセスとは異なるため、今回の要件には合致しません。



AWS Organizationsは、複数のAWSアカウントに対してポリシーを設定してアクセス権限を管理します。 AWS Organizationsでは複数アカウントをまとめたグループを作成し、アカウント作成を自動化し、それらのグループにサービスコントロールポリシー（SCP）を適用することが可能です。

AWS Organizationsを使用することで、カスタムスクリプトや手動プロセスを必要とせずに、複数のアカウントにわたってポリシーを集中管理できます。 これにより、複数のAWSアカウントにわたってAWSサービスの使用を一元的に制御するサービスコントロールポリシー（SCP）を作成できます。

IAMグループでは複数アカウントの管理はできません。

オプション２は不正解です。IAMインラインポリシーは実際のユーザー管理への利用は最適ではありません。

オプション４は不正解です。AWS Systems ManagerはAWSリソースの運用管理に利用する統合管理ツールです。ユーザー管理には利用されません。


ホストサーバーのOSなどに直接アクセスする必要がある特殊なワークロードを起動することになります

ベアメタルインスタンスを利用することで通常のクラウドサーバーでは不可能な、ホストコンピューターのOSなどにアクセスが可能とります。これにより、ベアメタルはユーザーは詳細なパフォーマンス分析ツールを利用するアプリケーションや、ベアメタルのインフラストラクチャへの直接アクセスを必要とする特殊なワークロード、仮想環境ではサポートされないレガシーのワークロード、そしてライセンス制限のあるティア1のビジネスクリティカルなアプリケーションを動かすことができます。したがって、オプション１が正解となります。



オプション２は不正解です。Dedicated Hostは物理的にサーバーを占有するインスタンスタイプです。Dedicated Hosts では、ライセンス条項の範囲で、ソケット単位、コア単位、または VM ソフトウェア単位の既存のライセンスを利用できます。同じAWSアカウントに属していたとしても、別のIAMグループとは物理サーバーを共有しません。



複数のAWSサービスをサーバーレスワークフローによって調整する対応を行っています。

AWS Step Functions を利用することで要件を達成できます。AWS Step FunctionsはAWS の複数のサービスをサーバーレスワークフローに整理して、プロセス処理を実行するアプリケーションを構築できます。ワークフローは一連のステップで構成され、あるステップの出力が次のステップへの入力になります。Step Functions は各ステップが自動的にトリガーおよび追跡され、エラーが発生した場合は再試行されるため、アプリケーションが意図したとおりの順序で実行されます。

Amazon SWF もAWS Step Functions と同じようにワークフローなどのプロセスを作成することができます。しかしながら、EC2インスタンスを利用したサーバーベースの機能であるためサーバーレスオーケストレーションを提供しません。

オプション３は不正解です。Lambdaはサーバーレスコンピューティングに使用されますが、複数のAWSサービスを利用したサーバーレスワークフローを構成することはできません。

オプション４は不正解です。AWS Batchは主にAWSで数十万のバッチコンピューティングジョブなどを効率的に実行するために使用されるため、正しくありません。




新規に作成したEBSボリュームをEC2インスタンスにアタッチ後にEB使用を開始するためは、そのボリュームにファイルシステムを作成することが必要です。したがって、オプション４が正解となります。 

インスタンスにAmazon EBSボリュームをアタッチ後に任意のファイルシステムでボリュームをフォーマットしてからマウントすることが必要です。 EBSボリュームを使用可能にした後、他のボリュームにアクセスするのと同じ方法でEBSボリュームにアクセスできます。 このファイルシステムに書き込まれたデータはすべてEBSボリュームに書き込まれます。


管理を適切に実施するため、 IAMポリシー、タグ、RDS、API呼び出しなどの特定のAWSリソースを一意に指定して、リソース間の連携設定を実施することが必要です。
Amazonリソースネーム（ARN）によりAWSリソースを一意に識別します。 IAMポリシー、Amazon Relational Database Service（Amazon RDS）タグ、APIコールなど、AWS全体でリソースを明確に指定する必要がある際にはARNが必要です。ARNは以下のような形式で定義されています。
arn:partition:service:region:account-id:resource-id




CloudFormation スタックセットを利用するとCloudFormation テンプレート内に AWS リソースの設定を定義して、１つのテンプレートにより複数の AWS アカウントやリージョンにリソースを展開できます。クロスアカウントやクロスリージョンのシナリオを解決する AWS 機能のベースラインレベルのセットアップにこの機能を活用できます。一度セットアップしてしまえば、追加のアカウントやリージョンに対しても容易に展開することができます。



DynamoDBの特定のデータ領域にアクセス集中が発生し、DynamoDBへのセッションデータの登録処理が滞る事象が発生するようになりました。最も高速な処理を達成するための対応が求められています。
DynamoDB Accelerator(DAX) を有効化することで、1 秒あたりのリクエスト数が数百万件になる処理に対しても、ミリセカンドからマイクロセカンドへの最大 10 倍のパフォーマンス向上を実現します。今回のケースでは特定のデータへのアクセスが集中しているため、そのデータがキャッシュに保持されてアクセスがキャッシュ上で行われれば、処理性能を大幅に向上させることができます。



Amazon FSx for Windows ファイルサーバーはAccess Control Lists (ACLs)、シャドウコピー、ユーザークォータなど、Windows ネイティブファイルシステムの機能をサポートしているストレージタイプです。他のストレージタイプにはない機能であるため、Amazon FSxのみが正解となります。




RedshiftのWLM(Work Load Management)を利用することで、クエリ処理を実施する際に、クエリ処理をキューとして実行順序を定義することが可能です。WLMはRedshiftのクエリ処理に対して割り当てるRedshiftのリソースを指定する機能です。事前にWLMとしてキューを用意しておき、キューに対して割り当てるメモリの割合や並列度、タイムアウトの時間を指定することでクエリに対するリソース配分を決定したり、長時間実行されるクエリを止めてクラスタリソースを無駄遣いしないようにすることができます。したがって、オプション１が正解となります。



ランキングやレコメンデーションの実装に使う高性能なデータベースを探しています。
Amazon ElastiCacheは、クラウド内のインメモリデータストアまたはキャッシュのデプロイ、運用、および拡張を容易にするWebサービスです。 このサービスは、低速のディスクベースのデータベースに完全に依存するのではなく、高速の管理されたインメモリデータストアから情報を取得できるようにすることで、Webアプリケーションのパフォーマンスを向上させます。ランキングやレコメンデーションの実装に使うための便利な機能を有しており、本件のデータベースとして最適です。




このシナリオでは、バックエンドにハードコーディングされた静的IPアドレスを必要としているため、ELBではない方法でトラフィック分散などの高可用性とフォールトトレランスを適用する方法が求められています。

仮想のElastic IPアドレスを使用してEC2インスタンスに付与することが望ましいです。Elastic IPを使用してから、EC2インスタンスの状態をチェックするカスタムスクリプトを作成します。これにより、インスタンスが応答を停止した場合、スクリプトはElastic IPアドレスをスタンバイEC2インスタンスに切り替えることができます。これで、ELBを利用せずに高可用性とフォールトトレランスを適用することが可能となります。また、EC2インスタンスにElastic IPをインスタンスに適用して、プロキシサーバーを設置することで、外部システムとの連携時にIPアドレスを特定して連携することが可能となります。
ELBの利用が制限されているため、AutoScalingをそのまま適用することができません。まずはオプション１と２の対応が必要不可欠です。


このシナリオでは、AWSアカウントにデフォルトで「FullAWSAccess」が付与されている場合にどのように許可形式のSCPが機能するかが問われています。デフォルトで「FullAWSAccess」が付与されている場合は全てのリソースに対する全ての操作が明示的に許可されている状態となります。そこにホワイトリスト形式（特定の操作の許可を与えるポリシー）で特定のリソースに対する許可を与えても、「FullAWSAccess」が付与されているため、結局は全てのリソースに対する許可が継続します。
このように特定の権限範囲を付与するSCPを新規に設定したい場合は、そのSCPアタッチしたあとに「FullAWSAccess」をデタッチしなければ機能しません。したがって、オプション４が正解となります。

このケースでは「この場合のOU内のメンバーアカウントの権限状態」が問われています。メンバーアカウントはあくまでもAWSアカウントそのものですので、その権限範囲がSCPによって規定されることになります。しかしながら、IAMユーザーに操作権限を付与するためには、追加でIAMポリシーのEC2インスタンスの操作権限を付与することが必要です。


直接的にDDoS攻撃事態を回避する対策を実施する必要があります。
AWS Shieldはマネージド型のDDoS攻撃に対する保護サービスで、AWS で実行しているアプリケーションを保護します。直接的にDDoS攻撃を回避するにはWAFではなくAWS Sheildを設定することが優先されます。

オプション１は不正解です。AWS Firewall Manager は、ユーザーの複数のアカウントとアプリケーションにわたって一元的に AWS WAF ルールを設定、管理することを容易にするセキュリティ管理サービスです。

オプション２は不正解です。AWS WAF は、アプリケーションに対する一般的なウェブエクスプロイトからウェブアプリケーションを保護するウェブアプリケーションファイアウォールです。不正なアクセス処理に利用される点は一致しており、DDoS攻撃に直接対処するサービスではないため不正解です。



ネットワークアクセスコントロールリスト (ACL) は、1 つ以上のサブネットのインバウンドトラフィックとアウトバウンドトラフィックを制御するファイアウォールとして動作する、VPC 用のセキュリティのオプションレイヤーです。セキュリティの追加レイヤーを VPC に追加するには、セキュリティグループと同様のルールを指定したネットワーク ACL をセットアップできます。

ネットワークACLルールは低い値から高い値にかけて評価され、一致する許可/拒否ルールが設定されるとすぐに実行されます。したがって、オプション4が正解となります。



アベイラビリティーゾーンはデータセンターの集まりであり、リージョン内で物理的に区分され独立しています。 発電機や冷却装置などの一般的な障害ポイントとなる設備は可用性ゾーン間で共有されません。 AZは物理的に分離されているため、火災、竜巻、洪水などの極端な災害は単一のアベイラビリティーゾーンのみに影響します。

一方で、エッジロケーションは低レイテンシーを達成するためのキャッシュコンテンツを配信するための地理的ロケーションとなります。これはリージョンやAZとは独立して配置されています。CloudFrontはエッジロケーションを使用して、キャッシュされたコンテンツを最も近いロケーションに配信し、待ち時間を短縮します。 エッジロケーションと呼ばれるデータセンターのグローバルネットワークを通じてコンテンツを配信します。



Amazon S3では、データを別の分析システムに移動することなく、直接にS3データに対して高度なビッグデータ分析を実行できます。S3に保存されているデータを直接解析することができる機能／サービスは以下の３つです。



■Amazon S3 Selectは、Amazon S3バケット内のオブジェクト内のデータをより迅速かつ安価に分析および処理できるように設計されています。単純なSQL式を使用してAmazon S3のオブジェクトからデータのサブセットを取得する機能を提供することで機能します。しかしながら、これは簡単なデータ検索や抽出に利用される機能であるため、本件の高度なビッグデータ分析には利用できません。したがって、オプション３は不正解です。

■Amazon Athenaは標準のSQL式を使用してAmazon S3のデータを簡単に分析できるインタラクティブなクエリサービスです。Amazon S3のデータをポイントし、スキーマを定義し、標準のSQL式を使用してクエリを開始するだけです。ほとんどの結果は数秒以内に配信されます。したがって、オプション4が正解となります。

■Amazon RedshiftにはRedshift Spectrumも含まれており、Amazon S3のエクサバイトの非構造化データに対してSQLクエリを直接実行できます。取得されるデータに基づいてクエリの計算能力を自動的にスケーリングするため、データセットのサイズに関係なく、Amazon S3に対するクエリは高速に実行されます。したがって、オプション5が正解となります。



最初の数週間でトラフィックが非常に多くなる可能性があります。よって、ロードエラーが発生した場合、Webアプリケーションへのフェイルオーバーを設定する必要があります。
Route53のフェイルオーバールーティングを利用することで、ロードエラーが発生した場合に静的WebサイトへのDNSフェイルオーバーを実施できます。

オプション３が正解となります。CloudFrontディストリビューションではフェールオーバーオプションが提供されています。CloudFrontへのフェールオーバーは従来は Route 53 の DNS フェイルオーバー を利用して実装することが必要でした。しかしながら、CloudFront 側でフェイルオーバのコントロールが出来るようになりました。CloudFrontフェールオーバーオプションはサイト単位でのフェイルオーバではなく、オブジェクト単位でのフェイルオーバになります。






Amazon CloudFrontの料金はAWSからのデータ転送と、顧客へのコンテンツ配信に使用されるリクエストによって算出されます。前払いや固定プラットフォーム料金、長期契約、ダイナミックコンテンツのプレミアムなどの要件はありません。具体的にはAmazon CloudFrontのコストは以下の要素に基づいています。



-トラフィックの分散：データ転送とリクエストの価格はリージョンによって異なり、価格はコンテンツが配信されるエッジの場所によっても異なる

-リクエスト：リクエスト（HTTPまたはHTTPS）の数と種類、およびリクエストが行われた地域。

-データ転送アウト：Amazon CloudFrontエッジロケーションから転送されたデータの量




AWSサービスの中には1年~3年などの一定期間利用を予約することを前提に割引価格で購入可能になるオプションがあります。主なリザーブド購入オプションは以下のようなものがあります。



・EC2リザーブドインスタンス

・RDSリザーブドインスタンス

・ElastiCacheリザーブドノード

・DynamoDBリザーブドキャパシティ

・Redshiftリザーブドノード




Amazon EMR は大規模環境で大量のデータを迅速かつコスト効率よく処理できるビッグデータ処理用のプラットフォームです。Apache Spark、Apache Hive、Apache HBase、Apache Flink、Presto などのオープンソースのツールと、Amazon EC2 の動的なスケーラビリティおよび Amazon S3 によるスケーラブルなストレージを組み合わせて伸縮自在なデータ処理・分析エンジンを提供します。ペタバイト規模の分析が従来のオンプレミスクラスターと比べてわずかなコストで実行できます。主なユースケースは次の通りです。



・MACHINE LEARNING

・抽出、変換、読み込み (ETL)

・クリックストリーム分析

・リアルタイムストリーミング データ処理

・インタラクティブ分析

・ゲノミクス


オプション１が正解となります。この要件に沿ってワークロードをAWSに移行するためには、AWS Server Migration Service (SMS) を利用することが最適です。

SMSは数千のオンプレミスワークロードを従来よりも簡単に、かつ短時間で AWS に移行できるエージェントレスサービスです。AWS SMS では、ライブサーバーボリュームの増分レプリケーションの自動化、スケジュール設定、および追跡が可能なため、大規模なサーバーの移行作業を簡単に調整できます。

Snowballは大量データを移行する際に利用するサービス機器です。ワークロードをAWSに移行することはできません。


AWS Globel Accelerator は世界中の顧客に提供するアプリケーションの可用性とパフォーマンスを改善するネットワークサービスです。AWS 上のアプリケーションに対して固定エントリポイントとなる静的 IP アドレスを提供することで様々な AWS リージョン、アベイラビリティーゾーンの特定の IP アドレスの管理における複雑さを排除します。EC2 インスタンスを Global Accelerator に接続するには、Accelerator を作成し、EC2 インスタンス ID を使用するエンドポイントにEC2 インスタンスを追加するだけです。したがって、オプション１が正解となります。



デフォルトのポリシーを利用するとOldestLaunchConfigurationから実行されます。したがって、既存のEC2インスタンスから削除される可能性が高いです。 


EC2で利用される一部のインスタンスタイプはインスタンスストアと呼ばれる直接接続されたブロックデバイスストレージを利用します。インスタンスストアのボリュームに格納されているデータは、インスタンスの停止、終了、またはハードウェアの障害によって永続化されないため、インスタンスストアは一時記憶に利用されます。したがって、オプション４が正解となります。

一方で、一時的ではないデータ保存の場合、またはデータを暗号化したい場合はEBSボリュームを使用することが必要です。EBSボリュームはインスタンスが停止してもデータを保持することができ、EBSスナップショットで容易にバックアップし、暗号化を実施することができます。



パブリックホストゾーンはインターネット上に公開されたDNSドメインレコードを管理するコンテナのことです。 ここにはexample.comなどのドメインのトラフィックをインターネットまたは特定のドメインでルーティングする情報を保持しています。したがって、オプション３と４はパブリックホストゾーンの特徴として正しい内容となります。



オプション１と２は不正解です。VPC同士が相互アクセス可能であればリージョンの異なるVPCでも、同じホストゾーンを利用可能なのはプライベートホストゾーンの説明です。プライベートサブネット内にあるドメインをルーティングするのもプライベートホストゾーンです。



セキュリティグループのルール設定として間違っている内容
上から番号順にルールが適用されるのはネットワークACLの特徴です。セキュリティグループは全てのルールを適用します。 したがって、オプション１が間違った説明となり、正解の選択肢です。



マルチパートアップロードを利用してアップロードできる個々のAmazon S3オブジェクトのサイズの範囲は最小0バイトから最大5テラバイトです。 1つのPUT操作でアップロードできる最大オブジェクトは5ギガバイトです。



 AWS Managed Microsoft AD （ AWS Directory Service for Microsoft Active Directory）を利用して、AWS クラウド内にマネージド型 Active Directory を設置できます。これを利用して AWS と既存のオンプレミス Microsoft Active Directory の間で信頼関係を設定し、シングルサインオン (SSO) を構成することも可能です。

オプション３が正解となります。AD Connector を使用して、既存のオンプレミスの Microsoft Active Directory と連携してSSOを実現できます。ADとロールに割り当てられた IAM ポリシーに基づいてユーザーの AWS サービスへのアクセスを制御します。



ALBの選択するべき理由
・L７に対応

・URLのパスに基いてルーティングが可能なパスベースルーティングが可能

・WebSocketとHTTP/2のリクエストが利用可能

・1インスタンスに複数ポートを登録可能

・EC2インスタンスをターゲットグループに割り当てる際、複数ポートを個別のターゲットとして登録することが可能なため、ポートを利用するコンテナをロードバランシング可能

・ターゲットグループでのヘルスチェックが可能

・アクセスログが取得できる

・EC2と同様に削除保護が可能

・ALB自体が自動的にキャパシティを増減する




AWSリソースのタグ付け戦略のベストプラクティスは以下の通りです。



・タグには常に標準化された大文字と小文字を区別する形式を使用し、全リソースタイプにわたって一貫して利用します。

・リソースアクセス制御、コスト追跡、自動化、および組織の管理機能をサポートするためのタグディメンションを検討します。

・リソースタグの管理に役立つ自動化ツールを実装します。 Resource Groups Tagging APIはプログラムによるタグの制御を実施し、タグとリソースの自動管理、検索、フィルタリングが簡単になります。

・AWSリージョンごとに1つのAPIコールを使用することで、サポートされているすべてのサービスのタグデータのバックアップを簡素化します。

・タグを多く使いすぎてはいけません。

・ビジネス要件の変化に対応するためにタグを変更する際は、タグベースのアクセス制御、自動化、またはアップストリーム請求レポートに関連する影響を考慮してください。



Amazon VPCにはリモートの顧客ネットワークとVPCの間にIPsec VPN接続を作成するオプションがあります。AWS managed VPNを利用することで、オンプレミス環境とVPC間とのサイト間接続を実行することができます。したがって、オプション１が正解となります。
Direct Connectは専用線接続サービスとして、AWS側とオンプレミス環境とを接続することが可能ですが、VPCによる接続方法ではないため、要件に合致していません。



データセンターにある１エクサバイトのデータをAWSに移行するプロジェクトを実施することになりました。
AWS Snowmobile は超大容量データを AWS に移動するために使用できるエクサバイト規模のデータ転送サービスです。これはセミトレーラートラックが牽引する長さ 14 m の丈夫な輸送コンテナで、Snowmobile 1 台あたり 100 PB まで転送できます。エクサバイトサイズのデータを移行する際に利用します。Snowmobile を使うと、ビデオライブラリや画像リポジトリ、またはデータセンター全体まで、膨大な量のデータを簡単にクラウドに移動できます。したがって、オプション２が正解となります。

AWS Snowball Edge はデータ移行とエッジコンピューティングのデバイスです。統合されたストレージとコンピューティング機能を備えた 100 TB のデータ転送デバイスです。主にペタバイト規模のデータの移動に使用できます。エクサバイト規模のデータ転送には役割不足です。


SSLサーバー証明書を管理するにはどのAWSサービスを利用する必要性がありますか？ （2つ選択してください。）
AWS Certificate Manager（ACM）はSSL証明書を作成したり、外部プロバイダーから取得した証明書をインポートして管理するサービスです。

オプション２が正解となります。ACMでサポートされていないリージョンでは、HTTPS接続をサポートする必要がある場合は、IAMをSSL証明書マネージャーとして使用します。 IAMはすべてのリージョンでのSSL証明書のデプロイをサポートしていますが、AWSで使用するには外部プロバイダーからSSL証明書を取得する必要があります。



移行計画を立案するためにはサーバーの使用率データや依存関係のマッピングなどを実施する必要があります。
AWS Application Discovery Service は、オンプレミスデータセンター内のサーバーにエージェントをインストールすることで、データセンターの利用情報を収集することができるサービスです。これらの情報に基づいて、ユーザーの移行プロジェクト計画作成を支援します。 したがって、オプション３が正解となります。

データセンター移行計画には何千ものワークロードが存在し、多くの場合それらが相互に深く依存しあっています。サーバーの使用率データや依存関係のマッピングは、移行プロセス初期の重要なステップです。AWS Application Discovery Service は、サーバーの設定データ、使用状況データ、動作データなどを収集できます。 収集されたデータは、AWS Application Discovery Service のデータストアに暗号化形式で保存されます。このデータを CSV ファイルとしてエクスポートし、AWS で稼働した場合の総所有コスト (TCO) の見積もりや、AWS への移行計画に使用できます。検出したサーバーを AWS に移行し、AWS に移行する際の進捗を追跡できます。

AWS Server Migration Service (SMS) は、数千のオンプレミスワークロードを従来よりも簡単に、かつ短時間で AWS に移行できるエージェントレスサービスです。AWS SMS では、ライブサーバーボリュームの増分レプリケーションの自動化、スケジュール設定、および追跡が可能なため、大規模なサーバーの移行作業を簡単に調整できます。

AWS Database Migration Service を使用すると、データベースを短期間で安全に AWS に移行できます。移行中でもソースデータベースは完全に利用可能な状態に保たれ、データベースを利用するアプリケーションのダウンタイムを最小限に抑えられます。



Amazon EMR の中心的なコンポーネントはクラスターです。クラスターはEC2インスタンスのコレクションのことです。クラスター内の各インスタンスはノードと呼ばれます。各ノードはクラスター内での役割があり、ノードタイプと呼ばれます。Amazon EMR は各ノードタイプにさまざまなソフトウェアコンポーネントもインストールし、Apache Hadoop などの分散型アプリケーションでの役割を各ノードに付与します。 そして、クラスターにノードをセットアップする際にEC2 インスタンスのオンデマンドインスタンス、スポットインスタンス、またはリザーブドインスタンスを利用可能です。
Amazon EMR 内のスポットインスタンスは、オンデマンドの購入と比較して、低コストで Amazon EC2 インスタンス容量を購入できるオプションを提供します。Amazon EMRのクラスターに対して、スポットインスタンスを利用することで、オンデマンドと比較してコストを抑えることができます。このEMRの処理は短期間に頻繁に発生しますが、クラスター構成自体は一時的に利用することになります。したがって、スポットインスタンスを利用可能なケースです。


処理中に全てのインスタンスが90%のCPU使用率に達して、処理能力が急激に低下してしまいました。しかしながら、Auto ScalingグループはグループにEC2インスタンスを追加することはありませんでした。
この問題の最も可能性の高い原因
Auto Scalingのクールダウン期間では、 Auto Scaling グループが追加のインスタンスを起動または削除することが一定期間できなくなります。この期間はインスタンスのウォームアップ期間やその他のアプリケーションのニーズに基づいて設定できます。したがって、オプション４が正解となります。Auto Scalingグループは、単純なスケーリングポリシーを使用して動的にスケーリングした後、スケーリングアクティビティを再開する前にクールダウン期間が完了するのを待ちます。


Auto Scalingグループの最大サイズを5つと設定している場合は、既に5つのEC2インスタンスが起動しているため、新規インスタンスを起動することはできません。したがって、オプション１が正解となります。

２０１９年９月までリージョン内で実行できるオンデマンドインスタンス数の上限は、すべてのインスタンスファミリーを合わせて 20 個に制限されていましたが、2019年9月24日から、Amazon EC2 で vCPU ベースのオンデマンドインスタンス制限が適用されるようになりました。したがって、オプション６ではなく、５が正解となります。




Amazon QuickSight は、クラウド型のBIツールを提供する可視化ツールです。QuickSight はML Insights を含むインタラクティブなダッシュボードを簡単に作成して公開できます。ダッシュボードはあらゆるデバイスからアクセス可能で、アプリケーション、ポータル、ウェブサイトに埋め込むことができます。

Amazon QuickSightは機械学習（ML）と自然言語機能を活用してデータからより深い洞察を得るのに役立つML Insights機能があります。これらのすぐに使える強力な機能により、誰もが隠れた傾向や外れ値を発見し、主要なビジネスドライバーを特定し、技術的な専門知識やMLの経験を必要とせずに強力なwhat-if分析と予測を実行できます。 



Glacier Deep Archiveは大量のデータ向けの長期ストレージをAWSの中で最も低価格で提供しています。データは 3 つ以上の AWS アベイラビリティゾーンにまたがって保存され、12 時間以内に取りだすことができます。




セキュリティ上の理由により、Redshiftクラスター間のすべてのトラフィックがインターネットを通過しないようにする必要があります。
Amazon Redshiftの拡張VPC ルーティングを使用すると、Amazon Redshift はクラスターとデータリポジトリ間のすべての COPY と UNLOAD トラフィックが Amazon VPC を通るよう強制します。これにより、VPC セキュリティグループ、ネットワークアクセスコントロールリスト (ACL)、VPC エンドポイント、VPC エンドポイントポリシー、インターネットゲートウェイ、ドメインネームシステム (DNS) サーバーなどのVPCの 機能をRedshiftで使用することができます。 これらの機能を使用して、Amazon Redshift クラスターと他のリソースの間のデータフローを詳細に管理できるようになり、VPC フローログを使って COPY と UNLOAD トラフィックを監視することができます。



CloudFrontを使用してホストされているWEB配信サービスを展開しています。ITセキュリティ部門はこのWeb配信を使用するアプリケーションのPCIコンプライアンスへの対応状況を監査しています。
WS責任共有モデルに基づいてPCIまたはHIPAA準拠のワークロードを実行している場合、監査のためには過去365日間のCloudFront使用状況データを記録することが重要です。使用状況データを記録するためにCloudFrontアクセスログを有効にして、CloudFront APIに送信されるリクエストをキャプチャできるようにする必要があります。したがって、オプション４と５が正解となります



Kinesis Data Firehoseを利用してS3にログを蓄積し、Athenaを利用してログ解析を行うことができます。そして、このデータ蓄積前に変換処理が必要となります。Kinesis Data FirehoseにLambda関数を設定して、データ変換を実施することが必要です。Amazon Kinesis Data Firehose では、データストアにロードする前にストリーミングデータを準備するよう設定できます。AWS マネジメントコンソールの Amazon Kinesis Data Firehose 配信ストリーム設定タブから、AWS Lambda 関数を選択します。この関数は、Amazon Kinesis Data Firehose で自動的にすべての入力データレコードに適用されます。

Amazon Kinesis Data Firehose はAWS マネジメントコンソールの Amazon Kinesis Data Firehose 配信ストリーム設定タブから、AWS Lambda 関数を選択します。つまりLambda関数と連携してデータ変換を実行します。

Amazon S3に静的ウェブサイトをホスティングできます。この静的ウェブサイトのルーティングをスケーリングするためにはRoute53と連携させることが必要です。Route53を利用してエイリアスレコードを作成してドメインのホストゾーンに追加し、pintor.com と www.pintor.com を対応する S3 バケットにマッピングします。エイリアスレコードでは、IP アドレスを使用する代わりに、Amazon S3 ウェブサイトエンドポイントを使用します。Amazon Route 53 によって、エイリアスレコードと、Amazon S3 バケットが存在する IP アドレスとのマッピングが維持されます。したがって、オプション１と２が正解となります。

S3というAWSサービスをドメイン設定するのはCNAMEレコードではなくエイリアスレコードにドメイン名を設定することが必要です。



EFSでは突然アクセスが増加するケースにはバーストスループットモードを選択します。バーストスループットモードではスループットがファイルシステムのサイズに合わせてスケールされ、ファイルベースの多数のワークロードの不規則な性質に対応するために、必要に応じて動的にバーストされます。これによって、EFSは一時的な高負荷に対応できるパフォーマンスを発揮することができます。




S3 の共有データセットへの大規模なデータアクセスの管理を簡素化するアクセス設定に S3 アクセスポイントを利用することが求められます。

Amazon S3 アクセスポイントは、S3 の共有データセットへの大規模なデータアクセスの管理を簡素化する機能です。アクセスポイントは、バケットにアタッチされた名前付きのネットワークエンドポイントで、S3 オブジェクトのオペレーション (GetObject や PutObject など) を実行するために使用できます。各アクセスポイントは基になるバケットにアタッチされたバケットポリシーと連動して機能するカスタマイズされたアクセスポイントポリシーを適用してアクセスを制御することが可能です。

Amazon S3 Transfer Acceleration を使用すると、クライアントと S3 バケットの間で長距離にわたるファイル転送を高速、簡単、安全に行えるようになります。


このバックアップ処理を効率的に集中管理する対応を行っています。AWS アカウントとリソース全体のバックアップアクティビティを設定および管理することが必要です。
AWS Backup はAWS Storage Gateway を使用して、オンプレミスおよび AWS サービス全体のデータのバックアップの一元化と自動化を簡単に実行できる、完全マネージド型のバックアップサービスです。バックアップポリシーを一元的に設定し、Amazon EBS ボリューム、Amazon RDS データベース、Amazon DynamoDB テーブル、Amazon EFS ファイルシステム、AWS Storage Gateway ボリュームなどの AWS リソースのバックアップアクティビティを監視できます。

Amazon DLMは、AmazonEBSボリュームとスナップショットの定期取得や管理を実施できます。しかしながら、これはのバックアップの一元管理を実施するサービスではないため正しくありません。




一部のWEB行動データは予測不能なアクセスパターンを持っており、蓄積方法が最適ではないことが判明しました。
保存するデータが予測不能なアクセスパターンを持っている場合は、S3 Intelligent-Tieringを利用することでストレージのコスト最適化を自動化することができます。 S3 Intelligent-Tieringには、高頻度と低頻度という2つのアクセス階層が組み込まれています。両階層はStandard(標準)ストレージクラスと同等の低レイテンシーを提供します。S3 Intelligent-Tiering はアクセスパターンをモニタリングして、連続30日間アクセスされていないデータを低頻度のアクセス階層に移動します。その後、そのデータがアクセスされた場合は、高頻度アクセス階層に自動的に戻されます。すなわち、アクセスパターンが変化するような状況でも、性能の影響なく利用料金を節約することができます。 

データがあまりアクセスされないとほぼ確信している場合には、コスト節約の観点では、Standard-IA(標準-低頻度アクセス)の利用が最適となります。しかしながら、今回のようにアクセスパターンが予測できない場合や変わりうる場合、Intelligent-Teringが有効です。



RDSはファイルシステムとの連携がサポートされていないため、連携を実現するためにはEC2インスタンスにデータベースをインストールしてデータベースサーバーをカスタムで構築する必要があります。
RDSはPostgreSQL 11のサポートを開始しました。詳細は以下のページをご参照ください。

https://aws.amazon.com/jp/rds/postgresql/why-postgresql-11/

オプション２は不正解です。RDSでデータベースを構築しても特定のCRMと連携することは可能です。  

オプション４は不正解です。RDSはEC2インスタンスとの連携やオンプレミスサーバーとの連携も構築可能です。



EBSボリュームの汎用SSDは同じAZ内のインスタンスにのみアタッチできます。別のAZのEBSにはアタッチできません。


アプリケーションの負荷テスト中に、AWS KMSリクエストが1秒あたりの制限を超えてしまい、エラーとなってしまいました。
暗号化のベストプラクティスに基づく最適な改善方法
AWS 暗号化 SDK は、言語固有の SDK とは別の暗号化専用のライブラリです。この暗号化ライブラリを使用すると、開発中のアプリケーションに対して暗号化のベストプラクティスによる暗号化の仕組みを簡単に実装できます。AWS 暗号化 SDKを利用することで、暗号化の制限を超過しないようなリクエスト処理の仕組みを構成して修正することで、現在のエラーを回避することが可能です。



 IAMを使用してリソースのセキュリティを含む会社のクラウドインフラストラクチャのすべてを管理するように権限を割り当てました。
IAMを利用してセキュリティ上のベストプラクティスに沿うために、ユーザーの適切なアクセスレベルに応じたIAM 権限を設定することが必要です。そのため、AWS アカウントのセキュリティを向上させるには、IAM ポリシーを定期的に確認しモニタリングする必要があります。ポリシーにより、必要なアクションのみの実行に必要な最小限の権限が付与されていることを確認します。



スループットが最も早いEBSがアタッチされたEC2インスタンスに対して、MySQLソフトウェアをインストールしてデータベースとして利用しています。しかしながら、このデータベースの書き込みスループットが非常に遅いことがわかりました。
このシナリオでは、EC2インスタンスでホストされるデータベースの書き込みパフォーマンスを向上させることが求められています。Amazon EBS は標準的な RAID 設定はすべて使用できます。単一のボリュームで実現できる以上の I/O パフォーマンスを実現するため、RAID 0 では複数のボリュームをまとめてストライピング構成が実施できます。RAID０構成により、I/O がストライプ内のボリュームにわたって分散されます。ボリュームを追加すると、スループットと IOPS を追加したことになり、スループットを向上させます。

オプション５は正解となります。一部のEC2インスタンスタイプは、単一のEBSボリュームにプロビジョニングできるものよりも多くのI / Oスループットを駆動できます。EBSの RAID 0構成では複数のgp2、io1、st1、またはsc1ボリュームを結合して、これらのインスタンスで利用可能な帯域幅を使用できます。 


AWS Lambdaは、DynamoDBから取得したデータに任意の集計をかける関数を開発することができます。これにより、特定期間の特定項目の集計を実施して、データを集計して抽出することが可能となります。

Amazon EMR は、オープンソースのフレームワークである Apache Spark と Hadoop を使用して、膨大な量のデータを迅速かつコスト効率よく処理して分析するサービスです。Amazon EMR および Hive を使用すると、DynamoDB に格納されているデータなど、大量のデータを迅速かつ効率的に処理できます。これはレポート作成ではなく、高速データ処理に利用される実装方式です。



顧客からの読取リクエストの急増によって、アプリケーションの表示が遅れたり、エラーとなるケースが多発しているようです。
この問題を解決するために、コストを度外視した最も高パフォーマンスな方法を選択してください。
このシナリオでは、アプリケーションのパフォーマンスが大きく低下し、特に読取パフォーマンスが低下していることが問題となっています。対応策としてはリードレプリカの増設、インスタンスタイプの高性能なタイプへの変更、キャッシュレイヤーでのElastiCacheの利用が考えられます。

この中でコストが高いものの、パフォーマンスが最も高いソリューションはElasticacheをキャッシュレイヤーに構成する方式です。ElastiCacheをRDSの前面に配置することで、RDSの読取処理が多いデータをキャッシュとして保持して、インメモリ上で高速処理することができます。インメモリDBであるElasticacheは他のDBと比較しても非常に高価ですが、性能が最も高いDBの一つです。したがって、オプション４が正解となります。   
インスタンスタイプを高性能にすればするほど、RDSのパフォーマンスとコストが高くなります。しかしながら、これはElastiCacheに比較すれば最も高性能で高コストなわけではありません。 



Amazon EFS は標準ストレージクラスと低頻度アクセスストレージクラス (EFS IA) という２つのストレージクラスを利用しています。EFS IA は、毎日アクセスしないファイルに対して最適化されたコスト効率の料金/パフォーマンスを提供します。ファイルシステムで EFS ライフサイクル管理を有効にするだけで、選択したライフサイクルポリシーに従ってアクセスしないファイルは、自動的かつ透過的に EFS IA に移されます。EFS IA ストレージクラスの費用は、たったの 0.025 USD/GB-月* です。したがって、オプション１が正解となります。   
オプション２は不正解です。EFS IAを選択するのではなく、ライフサイクル管理を有効にして自動的にIAクラスへの移行するように設定することでEFS IAを利用します。 



Amazon EFS は、幅広いワークロードに対応するために必要なスループット、IOPS、および低レイテンシーを提供できるように設計されており、汎用と最大 I/O の 2 種類のパフォーマンスモードを提供します。汎用モードは、ファイルシステムオペレーション単位で最小レイテンシーを実現するだけでなく、ランダムまたはシーケンシャル IO パターンでも同じ結果を得ることができます。したがって、最小レイテンシーを実現するためには汎用モードを選択することが必要です。 
最大 I/O モードのファイルシステムは、ファイルオペレーションのレイテンシーがわずかに長くなる代わりに、スループットが高性能にスケールできます。



このアプリケーションは1年間にかけて週一回レポートを作成することが必要であり、そのためには24時間の処理時間をかけてレポート生成処理を実施することが求められています。
選択するべきインスタンスの購入オプションはどれ
スケジュールされたリザーブドインスタンス を購入するキャパシティー、または将来的に利用できるようにする予定はありません。キャパシティーを予約するには、代わりに オンデマンドキャパシティー予約 を使用します。割引料金については、Savings Plans を使用します。したがって、今回は購入オプションが問われているため、Savings Plansが回答となります。


このWEBアプリケーションはユーザーとリソースの地理的場所に基づいてリソースのトラフィックをルーティングすることが必要です。
この要件を満たすRoute53の設定方法を選択してください。
地理的近接性ルーティングは、Amazon Route 53 はユーザーとリソースの地理的場所に基づいてリソースのトラフィックをルーティングします。また、バイアスという値を指定することで、特定のリソースにルーティングするトラフィックの量を変更できます。バイアスはリソースにルーティングされるトラフィックのルーティング元である地理的リージョンのサイズを拡大または縮小します。地理的近接性ルーティングを設定するにはRoute 53 トラフィックフローを使用する必要があります。
一方で位置情報ルーティングはユーザーの位置情報（IPアドレスによる）基づいて特定のリージョンに対して、ルーティングさせる設定をすることができます。ユーザーとリソースに基づいた地理的近接性ルーティングと似ていますが、リソースに基づかない等で部分的に異なることを理解してください。したがって、オプション１と４は不正解です。

オプション３は不正解です。地理的近接性ルーティングはレコード設定では設定できないため、トラフィックフローを利用することが必要となります。



このシナリオでは、アプリケーションユーザーは世界中におり、すべてのユーザーがシステムを頻繁に使用しているわけではありません。したがって、一部リージョンで負荷が高くなっているため、Route53によるレイテンシールーティングを利用します。これにより、ユーザーによるリクエストをレイテンシーが低いリージョンにリダイレクトして、アプリケーションの処理を高速化します。



保存データは滅多に利用されない中長期保存用となりますが、利用する場合は１２時間以内にファイルを送信することが必要です。
このシナリオでは、データ分析の前後に発生する大量のデータを保存するためのコスト最適な方法が必要となっています。まずはデータをzipまたはtarファイルに圧縮することにより、データの保存コストを削減できます。保存データは12時間以内に取得できる必要があるため、Glacier よりもGlacier Deep Archiveに保存することでコストを抑えることができます。Glacier Deep Archiveはデータは ３ つ以上の AWS アベイラビリティゾーンにまたがって保存され、12 時間以内に取りだすことができます。したがって、オプション２が正解となります。    



このシナリオでは、Webサーバーとアプリケーションサーバー、およびOracleデータベースで構成されるアプリケーションのデータのバックアップを実現することが求められています。このデータはデータベースとサーバーのファイルシステムの両方に保存されています。そして、2時間以内にデータベースの回復、サーバーディスクの復元、および個々のファイルの復元を実施することが必要です。 
オプション３が正解となります。RDSを利用してOracleデータベースを起動して自動バックアップを設定することで、一定時間での定期的なバックアップ取得を実現します。


現在のアーキテクチャではVPCエンドポイントをそのまま使用できないようです。
VPCエンドポイントを利用してS３バケット内のコンテンツをシェアする方法を選択してください。
VPCエンドポイントはリージョン内のポイントであるため、リージョン外からはアクセスできません。したがって、エンドポイントを使用するには、使用されるリージョンに S3 クロスリージョンレプリケーションによってS3オブジェクトをコピーする必要があります。これによって、対象リージョンにS3オブジェクトをレプリケーションすることで、そのリージョンに対するVPCエンドポイントによるアクセスを構成します。 




HTTP 503 レスポンスとは「サービスが利用できない」ときに表示されるエラーです。バージョニングを有効にしたバケットに対して 当該エラーが発生してしまう原因は、数百万のバージョンを有する1 つ以上のオブジェクトが存在している可能性があります。数百万のバージョンを持つオブジェクトがある場合、Amazon S3 は、過剰なリクエストトラフィックからユーザーを保護するためバケットへのリクエストを自動的に調整します。
この問題を回避するためには、ライフサイクル管理の「NonCurrentVersion」有効期限ポリシーと「ExpiredObjectDeleteMarker」ポリシーを有効にして、以前のバージョンのオブジェクトを期限切れにすることです。そして、バケット内に関連するデータオブジェクトが存在しないマーカーを削除します。



CloudTrailはアクティビティログを取得するサービスであり、アクティビティに関する監視に利用できます。しかしながら、ここで問われているのはIAMユーザーのアクティビティの不正ではなく、外部の第三者のアクセスに対する不正確認となっております。外部アクセスを許可している際に不正な利用が発生しないかを検証するためのツールは IAM Access Analyzerrになります。

オプション２は不正解です。サーバーアクセスのログには、バケットに対するリクエストの詳細が記録されます。サーバーアクセスのログは、多くのアプリケーションに役立ちます。たとえば、アクセスのログ情報は、セキュリティやアクセスの監査に役立ちます。これはオブジェクトのアクセスパターンを分析するものではありません。

オプション３は不正解です。Amazon S3 分析のストレージクラス分析を使用することにより、ストレージアクセスパターンを分析し、適切なデータをいつ適切なストレージクラスに移行すべきかを判断できます。 



S3バケットの公開に対する制御はACLまたはバケットポリシーにより実行します。バケットポリシーはバケットのみに設定されるアクセス制御ですが、ACLはバケットとオブジェクトの両方に設定することができます。ACLではバケット単位のACLの設定に関係なくオブジェクト単位のACLが優先されるように設定されます。つまり、バケットACLでパブリックアクセスを許可しない設定することに加えて、オブジェクトについてもACLでパブリックアクセスを許可していないことが必要となります。

このようなACLの設定は非常に面倒であったため、追加されたのが S3のパブリックアクセス設定機能です。 S3 の パブリックアクセス設定機能は、バケットレベルまたはアカウントレベルで、すべてのオブジェクトへのパブリックアクセスをブロックできます。この機能でブロックを有効化することでS3バケット全体に対してパブリックアクセスを拒否することができます。したがって、オプション３が正解となります。   



AI機能を実装するためにはGPUを利用可能なインスタンスを選択することが必要です。
AI機能にはGPUを利用することが最適です。GPUを選択するには高速コンピューティングインスタンスを利用します。高速コンピューティングインスタンスはハードウェアアクセラレーター を使用して、浮動小数点計算、グラフィックス処理、データパターン照合などの機能を、CPU で実行中のソフトウェアよりも効率的に実行します。ゲーミング処理やグラフィック処理、機械学習の処理にはこのインスタンスが最適です。




Amazon WorkSpaces は、マネージド型でセキュアな仮想デスクトップ ソリューションです。Amazon WorkSpaces を使うと、Windows または Linux のデスクトップを数分でセットアップできます。これを利用して、すばやくスケールすることで世界中のたくさんの従業員に仮想デスクトップを提供できます。 仮想デスクトップとすることでデータやデスクトップ構成をラックトップに保存することなく、集中管理することが可能となります。それによって、個人のPC紛失などによるデータ漏洩を防ぐことが可能です。


S3を利用したファイル共有を前提とした、会計システムをAWSにホストしています。この会計システムのファイルを他のドメインから連携して、利用する機能が必要です。
S3のCross-Origin Resource Sharing (CORS) を有効化すると、既にドメインが設定されているS3バケットを他のドメインに共有することが可能となります。CORSは特定のドメインにロードされたクライアントウェブアプリケーションが異なるドメイン内のリソースと通信する方法を定義します。これによって、Amazon S3 を使用して機能豊富なクライアント側ウェブアプリケーションを構築し、Amazon S3 リソースに対するクロスオリジンアクセスを選択的に許可することができます。したがって、オプション２が正解となります。 

このシナリオでは、１つのAZにEC2インスタンスが設置されているため、AZ障害が発生した際にアプリケーション全体が停止してしまうリスクがあります。したがって、マルチAZ構成を実現するための最適な構成を選択することが必要です。

オプション１が正解となります。EC2インスタンスを別AZに起動して、ELBターゲットをAZを跨いで設定し、ELBがAZを跨いでEC2インスタンス間でトラフィックを制御します。これによって、１つのAZが停止した場合は、残ったAZでEC2インスタンスの処理を継続させることができます。 

オプション２が正解となります。AutoScalingのスケーリンググループをAZ間を跨いで構成することで、１つのAZでのEC2インスタンスが停止したとした場合に、その処理負荷を生き残ったAZに新規インスタンスを起動させることで軽減させることができます。   
Route53によりフェールオーバールーティングを設定することは可能ですが、これは２つのEC2インスタンス間での単純なアクティブ・パッシブ構成を実施することしかできません。つまり、プライマリーのインスタンスがダウンした際にセカンダリーに切り替えることができるだけです。このケースでは、ELBによって複数インスタンス間でのトラフィック分散を実現することが必要です。Route53のフェールオーバールーティングはアクティブパッシブ構成しかできません。つまり、１つをセカンダリーにして待機する構成しかできないためこれは災害復旧対策用の構成となります。今回は複数AZをまたいだトラフィック分散をすることでAZ障害への対応することが求められています。




ECSタスクのためのIAMロールを作成した上で、EC2コンテナではなくECSタスクに直接IAMロールを紐付けることで、安全なアクセス権限付与が可能となります。したがって、DynamoDBへの読取権限を付与したIAMロールをECSタスクに付与することで、ECSタスク上のEC2インスタンスからDynamoDBテーブルの読取オペレーションが実行可能となります。   




Amazon S3 アクセスコントロールリスト (ACL) では、バケットとオブジェクトへのアクセスを管理できます。ACLにより、アクセスが許可される AWS アカウントまたはグループとアクセスの種類が定義されます。リソースに対するリクエストを受信すると、Amazon S3 は該当する ACL を調べて、必要なアクセス許可がリクエスタにあることを確認します。したがって、オプション４が正解となります。 
バケットポリシーは、バケットに対してユーザーアクセス権限を設定するバケットに関するポリシーです。オブジェクト単位でのアクセス権限のコントロールにはACLを利用します。今回はオブジェクトへのアクセス権限の設定であるためACLが正解となります。


RDS MySQLデータベースから毎週同じクエリ処理を行いデータを集計して、レポートを生成するタスクを自動化しようと考えています。そこで、あなたはLambdaを連携したデータ集約関数を構築することにしました。
RDS プロキシはアプリケーションとRDSデータベースの間の仲介役として機能します。RDS プロキシは必要となるデータベースへのコネクションプールを確立および管理し、アプリケーションからのデータベース接続を少なく抑える機能です。
Lambda関数はRDSエンドポイントではなくRDSプロキシを利用して接続することが求められます。RDSプロキシはLambda関数の同時実行によって作成された大量の同時接続をスケーリングするために必要なコネクションをプーリングします。これにより、Lambdaアプリケーションは、Lambda関数呼び出しごとに新しいコネクションを作成するのではなく、既存のコネクションを再利用できます。   RDSプロキシを利用せず、エンドポイントを利用するとLambda関数によってコネクションが多数発生して処理が上手くいかなくなってしまいます。




データレイヤーのDynamoDB領域に一時的なアクセス集中があり、書込処理能力が落ちてしまうトラブルが発生しています。コスト効果の良いソリューション

DynamoDBをマルチAZ構成で起動する機能はないため不適格です。また、「グローバルセカンダリーインデックスを付与する」と読取クエリ処理が効率化できるようになりますが、今回の要件には不十分な対応となります。 



RDS MySQL DBインスタンスが70％のCPU使用率に達すると、アプリケーションは応答しなくなることが分かりました。
この問題を解決するためにデータ層の拡張方法はどれ
Amazon RDSリードレプリカは、DBインスタンスのパフォーマンスと耐久性を強化します。このレプリケーション機能を使用すると、読み取りが多いデータベースワークロードに対して、単一のDBインスタンスの容量制限を超えて弾力的にスケールアウトすることが容易になります。

オプション３は正解となります。シャーディングはデータベース内の複数のテーブルにデータを分割するための一般的な概念です。リクエスト増加などで単一のマスターDBの運用で限界がある場合に、 一定のルールに従いデータを複数のDBに振り分けることでアクセスを分散させることができます。 




Amazon EFS はNFSv4 プロトコル経由で従来のファイルアクセス許可するファイルストレージです。Amazon EC2 インスタンスとオンプレミスサーバーの数千の接続に安全なアクセスを同時に提供します。Amazon EC2 インスタンスはAZ、リージョン、VPC にかけてファイルシステムにアクセスできます。また、オンプレミスサーバーは AWS Direct Connect あるいは AWS VPN を介してアクセスできます。したがって、オプション３が正解となります。 



EBSのRAID１構成は耐障害性が I/O パフォーマンスより重要な場合に利用されるストレージ構成です。１つのEBSボリュームが故障したとしてもデータの消失を防ぐことができ、RTO1分以内の回復が可能です。 

Amazon EBS はインスタンスでの冗長性確保のため、RAID 1 では 2 つのボリュームを同時にミラーリングできます。 Amazon EBS ボリュームのデータは、同じアベイラビリティーゾーン内の複数のサーバーにレプリケートされます。これは、コンポーネントの 1 つに障害が発生したことが原因でデータが失われるのを防ぐためです。このレプリケーションにより、一般的なコモディティディスクドライブに比べて Amazon EBS ボリュームの信頼性は10 倍に高まります。    



VPC内のEC2インスタンスがソフトウェアの更新のために外部のサードパーティのURLからアクセスすることが必要です。セキュリティ要件として、EC2インスタンスに対して、その他のアウトバウンド接続を明示的に拒否する必要があります。 
プロキシサーバーはクライアントからの要求をフィルターし、製品の更新に関連する要求のみを許可して、特定のソフトウェア更新以外のすべての要求をフィルタリングできます。
このシナリオではVPCのインスタンスにインターネットアクセスが必要であり、ソフトウェアの更新のみにアクセスを制限する必要があります。また、他のアウトバウンド接続を明示的に拒否することも求められています。そのため、制限なくインターネットにアクセスできないようにするために、EC2インスタンスをプライベートサブネットに配置する必要があります。また、クライアントマシンからの要求をフィルタリングするためのロジックが必要となるため、その制御にはプロキシサーバーを利用します。  




このCloudFormationテンプレートでは前半で  RegionMap内で、Mapping関数の参照元が設定されています。



  RegionMap:

    ap-northeast-1:

      hvm: "ami-0792756bc9edf3e63"

    ap-southeast-1:

      hvm: "ami-0162da29310cc18f6"



この内容が、PropertiesにあるMapping関数によって引用させることになります。



    Properties:

      ImageId: !FindInMap [RegionMap, !Ref 'AWS::Region', hvm]



この引用方法としては、CloudFormationテンプレートが利用されたリージョンに応じてAMIを設定するという引用の仕方を実行します。したがって、オプション２が正解となります。




このシナリオではCloudFrontとカスタムオリジン間のHTTPS通信を設定する必要があり、オリジンがELBではない要件となっているため、信頼できるCAによって証明書が発行される必要があります。そして、そのCA証明書をオリジンとCloudFrontエッジ側の両方に利用して、HTTPSによるデータ通信を可能にすることが求められます。したがって、オプション３が正解となります。

■ビューアとCloudFront間のHTTPS Comodo、DigiCert、Symantec、またはその他のサードパーティプロバイダーなどの信頼できる認証局（CA）によって発行された証明書を使用できます。また、AWS Certificate Manager（ACM）が提供する証明書も使用できます 
■CloudFrontとカスタムオリジン間のHTTPS オリジンがELB ロードバランサー以外のオリジンの場合、信頼されたサードパーティー認証機関 (CA) (Comodo、DigiCert、Symantec など) によって署名された証明書を使用する必要があります。 
オプション１と４は不正解です。オリジンがELBではない要件となっているため、AWS Certificate Manager（ACM）ではなく信頼できるCAによって証明書が発行される必要があります。  ただし、ACM for Nitro Enclaves を利用することで、プライベート SSL/TLS 証明書を使用できるようにする Enclaves アプリケーションを利用してACMの証明書を設定することは可能です。今回のそのような構成は問われていないため不正解となります。



Amazon Redshift はクラスターに対してデータベースの暗号化を有効にして、保管データを保護できます。クラスターに対して暗号化を有効にすると、クラスターとそのスナップショットのデータブロックとシステムメタデータが暗号化されます。

Amazon Redshift は暗号化キーの階層を使用してデータベースを暗号化します。AWS Key Management Service (AWS KMS) またはハードウェアセキュリティモジュール (HSM) のいずれかを使用して、この階層の最上位の暗号化キーを管理できます。Amazon Redshift で暗号化に使用するプロセスはキーの管理方法によって異なります。したがって、オプション２が正解となります。

Amazon Redshift はAWS KMSと統合されており、暗号化を構成できます。しかしながら、HSM は統合されていません。HSM を使用するときは、クライアントとサーバーの証明書を使用して、Amazon Redshift と HSM との間で信頼された接続を設定する必要があります。したがって、オプション３が正解となります。



ボトルネックとなっているNATゲートウェイによるアドレス変換処理を高可用にするために２つ以上のアベイラビリティゾーンの複数のパブリックサブネットに対して複数のNATゲートウェイを構成する必要があります。これにより、１つのアベイラビリティゾーンが停止した場合でも、他のNATゲートウェイがインターネットトラフィックを処理できるようになります。 したがって、オプション２が正解となります。

また、NATゲートウェイを複数AZに展開した後は、それぞれのNATゲートウェイに対して、各AZにおいてプライベートサブネットへのルートテーブルでのルート設定を実施することが必要です。したがって、オプション４も正解となります。



この要件を満たすコスト最適な構成は、メッセージ処理においてSQSを利用して、オンデマンドのEC2インスタンスを処理サーバーとしつつ、インスタンスの可用性を高めるためにAutoScalingを構成します。AutoScalingには最も値段の安いスポットインスタンスを利用することが最適となります。
長期的な利用が不明確なシステム処理であるため、処理サーバーにはリザーブドインスタンスやスケジュールドリザーブドインスタンスは不向きです。



 Amazon EC2 M5 インスタンスは、次世代の Amazon EC2 汎用コンピューティングインスタンスです。M5 インスタンスは、さまざまなワークロード向けに、コンピューティング、メモリ、ネットワーキングリソースをバランスよく提供しています。したがって、選択肢にあるM5インスタンスを利用してプレイスメントグループを設定することが最適です。

新しい EC2インスタンスを起動する場合、EC2は相関性のエラーを最小限に抑えるために、すべてのインスタンスが基盤となるハードウェアに分散されるようにインスタンスを配置します。プレイスメントグループを使用することで、ワークロードのニーズに対応するために独立したインスタンスのグループのプレイスメントに影響を与えることができます。この設定は先にプレイスメントグループを構成した上で、その中でインスタンスタイプとインスタンス数を決定します。   
T3 インスタンスは、ベースラインレベルの CPU パフォーマンスを提供する次世代のバースト可能な汎用インスタンスタイプです。これはクラスタープレイスメントグループによる設定ができないインスタンスタイプです。



S3バケットからコンテンツが配信されるユーザーのIPアドレス範囲が限定されていないためセキュリティ上問題となっています。そこで、特定のユーザーに配信可能な方式に変更する必要があります。
CloudFront 署名付き URL または署名付き Cookie を作成して Amazon S3 バケット内のファイルへのアクセスを制限します。その上で、S3バケットに直接アクセスできないようにオリジンアクセスアイデンティティ (OAI) という特別な CloudFront ユーザーを作成して配布に関連付けて、CloudFront が OAI を使用してファイルにアクセスしてユーザーに提供できるようにアクセス許可を構成します。これによって、署名を有するユーザーのみに限定してコンテンツを配信することが可能です。



基本的にEBSは複数のEC2インスタンスにアタッチすることができないストレージタイプです。しかしながら、2020年2月より Multi-Attach 機能が追加されました。Amazon EBS プロビジョンド IOPS io1またはio2 ボリュームを利用している場合のみMulti-Attach を有効化して、単一のボリュームを同じアベイラビリティーゾーン内の最大 16 個の AWS Nitro システムベースの Amazon Elastic Compute Cloud (Amazon EC2) インスタンスに同時にアタッチできます。

Multi-Attach を使用すると、複数のライターからのストレージの一貫性を管理するアプリケーションの可用性を簡単に高めることができます。アタッチされた各インスタンスには、共有ボリュームに対する完全な読み込み／書き込み権限があります。マルチアタッチを使用するアプリケーションは、ストレージの一貫性のために IO フェンスを提供する必要があります。



Snowball Edge Storage Optimizedは最大で100TBの容量がありますが、利用可能な領域は80TBです。したがって、90TBのデータ移行には2つ使う必要があります。また、Snowball のストレージ容量は80 TB（72 TB使用可能）であり、90TBのデータ転送には2つ利用します。しかしながら、現在はSnowBall利用は推奨されておらず、AWSではSnowball Edgeの利用が求められています。
現在AWSではSnowBallの仕様は推奨されておらず、Snowball Edgeの利用が求められています。


このシステムはコールセンターのピーク時には非常に負荷が高まりますが、その負荷発生の周期が一定ではありません。
このシナリオでは、EC2インスタンスのWEBサーバーとOLTP処理を行うデータベースの両方をスケーラブルな構成によって可用性を高める必要があります。したがって、複数のアベイラビリティーゾーンにまたがるEC2インスタンスにAuto ScalingグループとELBを設定することが基本対応となります。また、データベースは不規則なピーク処理が発生することからAuroraサーバレスを利用します。 この中で回答にはデータベースの構成が求められているため、オプション３が正解となります。

Aurora Serverless は不規則な負荷に自動でスケーリングすることが可能なRDBです。DB インスタンスクラスのサイズを指定せずにデータベースエンドポイントを作成し、データベースエンドポイントがプロキシフリートに接続されます。このプロキシフリートでは、ワークロードをルーティングする先のリソースのフリートがオートスケーリングされます。プロキシフリートを使用すると、最小と最大のキャパシティー仕様に基づいて Aurora Serverless がリソースを自動的にスケールすることができます。



このシナリオでは、ECサイトは単一リージョン内の複数AZに跨いで複数のEC2インスタンスがホストされており、ELBによるトラフィック分散が設定されていますが、AutoScalingが設定されてないため高負荷時にダウンする可能性があります。

オプション１が正解となります。複数AZを指定したAuroScalingグループを作成し、それをELBターゲットグループに設定することで、複数AZにEC2インスタンスをスケーリングすることができるようになります。ELBによって既存AZのインスタンスに異常があれば、ヘルスチェックで確認され、その後AutoScalingが停止したAZにあったEC2インスタンスの代わりに別AZにEC2インスタンスを起動します。   



